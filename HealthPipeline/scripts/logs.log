2025-01-21 10:24:56,217:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:24:56,219:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:24:56,623:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:24:56,777:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 10:35:35,426:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:35:35,426:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:35:35,700:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:35:35,839:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 10:37:55,344:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:37:55,344:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:37:55,634:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:37:55,764:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 10:37:55,856:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 10:37:55,882:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 10:44:10,497:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:44:10,497:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:44:10,774:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:44:10,894:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 10:44:10,990:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 10:44:11,015:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:105: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 10:47:51,621:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:47:51,621:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:47:51,885:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:47:52,011:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 10:47:52,112:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 10:47:52,140:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:105: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 10:51:41,526:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:51:41,527:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:51:41,799:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:51:41,934:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 10:51:42,042:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 10:51:42,073:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 10:56:48,767:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:56:48,767:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:56:49,063:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 10:56:49,185:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 10:56:49,296:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 10:56:49,327:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:01:10,530:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:01:10,530:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:01:10,809:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:01:10,941:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:01:11,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:01:11,052:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:03:35,253:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:03:35,253:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:03:35,534:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:03:35,687:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:03:35,776:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:03:35,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:15:23,586:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:15:23,586:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:15:23,867:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:15:23,999:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:15:24,091:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:15:24,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:20:33,711:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:20:33,711:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:20:34,009:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:20:34,143:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:20:34,238:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:20:34,264:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:24:20,063:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:24:20,064:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:24:20,345:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:24:20,467:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:24:20,565:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:24:20,598:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:29:21,865:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:29:21,865:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:29:22,256:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:29:22,428:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:29:22,547:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:29:22,604:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:29:22,705:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 11:29:22,712:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 11:29:22,713:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 11:29:22,715:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 11:29:22,717:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 11:29:22,719:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 11:29:22,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 11:29:22,725:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 11:29:22,727:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 11:38:47,632:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:38:47,632:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:38:47,908:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:38:48,030:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:38:48,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:38:48,146:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:38:48,207:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 11:38:48,208:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 11:38:48,209:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 11:38:48,209:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 11:38:48,209:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 11:38:48,210:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 11:38:48,211:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 11:38:48,211:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 11:38:48,212:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 11:41:52,712:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:41:52,712:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:41:52,986:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:41:53,122:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:41:53,220:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:41:53,245:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:41:53,314:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 11:41:53,316:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 11:41:53,316:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 11:41:53,317:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 11:41:53,317:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 11:41:53,318:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 11:41:53,319:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 11:41:53,319:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 11:41:53,319:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 11:48:56,313:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:48:56,313:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:48:56,574:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 11:48:56,692:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 11:48:56,788:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 11:48:56,813:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 11:48:56,872:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 11:48:56,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 11:48:56,874:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 11:48:56,874:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 11:48:56,874:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 11:48:56,875:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 11:48:56,875:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 11:48:56,876:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 11:48:56,876:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 13:04:32,307:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:04:32,307:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:04:32,575:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:04:32,721:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 13:04:32,817:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 13:04:32,843:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 13:04:32,898:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 13:04:32,900:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 13:04:32,900:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 13:04:32,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 13:04:32,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 13:04:32,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 13:04:32,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 13:04:32,903:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 13:04:32,903:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 13:32:30,400:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:32:30,400:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:32:30,663:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:32:30,779:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 13:32:30,876:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 13:32:30,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 13:32:30,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 13:32:30,955:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 13:32:30,956:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 13:32:30,956:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 13:32:30,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 13:32:30,958:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 13:32:30,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 13:32:30,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 13:32:30,960:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 13:36:23,144:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:36:23,144:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:36:23,429:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:36:23,550:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 13:36:23,637:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 13:36:23,670:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 13:36:23,730:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 13:36:23,732:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 13:36:23,732:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 13:36:23,732:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 13:36:23,733:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 13:36:23,733:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 13:36:23,734:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 13:36:23,734:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 13:36:23,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 13:40:10,588:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:40:10,588:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:40:10,877:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:40:10,997:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 13:40:11,090:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 13:40:11,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 13:40:11,168:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 13:40:11,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 13:40:11,171:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 13:40:11,171:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 13:40:11,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 13:40:11,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 13:40:11,173:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 13:40:11,173:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 13:40:11,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 13:42:50,144:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:42:50,144:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:42:50,419:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:42:50,554:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 13:42:50,653:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 13:42:50,676:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 13:42:50,736:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 13:42:50,737:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 13:42:50,738:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 13:42:50,738:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 13:42:50,738:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 13:42:50,739:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 13:42:50,740:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 13:42:50,740:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 13:42:50,740:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 13:42:50,752:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:42:50,753:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  warnings.warn(

2025-01-21 13:49:31,928:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:49:31,928:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:49:32,206:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:49:32,356:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 13:49:32,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 13:49:32,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 13:49:32,549:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 13:49:32,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 13:49:32,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 13:49:32,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 13:49:32,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 13:49:32,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 13:49:32,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 13:49:32,554:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 13:49:32,554:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 13:49:32,559:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 13:49:32,560:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  warnings.warn(

2025-01-21 14:09:24,693:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:09:24,693:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:09:24,974:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:09:25,090:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:09:25,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:09:25,210:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:09:25,264:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:09:25,265:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:09:25,266:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:09:25,266:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:09:25,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:09:25,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:09:25,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:09:25,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:09:25,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:09:25,273:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:09:25,273:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  warnings.warn(

2025-01-21 14:12:55,483:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:12:55,483:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:12:55,791:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:12:55,942:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:12:56,055:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:12:56,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:12:56,137:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:12:56,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:12:56,140:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:12:56,140:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:12:56,141:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:12:56,142:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:12:56,144:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:12:56,144:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:12:56,145:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:12:56,152:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:12:56,153:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:12:56,153:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:12:56,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:12:56,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:12:56,155:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:12:56,155:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:24:23,918:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:24:23,918:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:24:24,197:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:24:24,308:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:24:24,393:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:24:24,418:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:24:24,483:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:24:24,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:24:24,486:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:24:24,486:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:24:24,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:24:24,488:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:24:24,489:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:24:24,489:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:24:24,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:24:24,494:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:24:24,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:24:24,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:24:24,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:24:24,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:24:24,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:24:24,497:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:24:24,497:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:27:17,057:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:27:17,057:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:27:17,358:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:27:17,508:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:27:17,612:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:27:17,639:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:27:17,706:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:27:17,708:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:27:17,709:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:27:17,710:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:27:17,710:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:27:17,712:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:27:17,713:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:27:17,713:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:27:17,714:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:27:17,718:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:27:17,719:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:27:17,719:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:27:17,719:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:27:17,720:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:27:17,720:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:27:17,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:27:17,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:27:17,725:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:41: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 14:27:17,726:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:29: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 14:27:17,726:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:30: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 14:27:17,728:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY']

2025-01-21 14:31:43,233:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:31:43,233:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:31:43,496:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:31:43,616:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:31:43,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:31:43,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:31:43,792:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:31:43,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:31:43,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:31:43,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:31:43,794:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:31:43,795:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:31:43,795:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:31:43,796:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:31:43,796:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:31:43,800:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:31:43,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:31:43,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:31:43,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:31:43,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:31:43,803:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:31:43,803:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:31:43,804:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:31:43,808:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:41: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 14:31:43,808:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:29: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 14:31:43,809:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:30: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 14:31:43,811:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = pd.DataFrame(self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'])

2025-01-21 14:36:37,416:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:36:37,416:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:36:37,706:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:36:37,836:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:36:37,928:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:36:37,950:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:36:38,017:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:36:38,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:36:38,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:36:38,021:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:36:38,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:36:38,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:36:38,023:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:36:38,023:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:36:38,024:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:36:38,028:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:36:38,029:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:36:38,029:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:36:38,030:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:36:38,030:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:36:38,030:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:36:38,031:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:36:38,032:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:36:38,038:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 14:36:38,038:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 14:36:38,039:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 14:36:38,041:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = pd.DataFrame(self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'])

2025-01-21 14:38:52,373:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:38:52,373:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:38:52,651:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:38:52,773:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:38:52,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:38:52,891:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:38:52,943:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:38:52,945:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:38:52,945:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:38:52,945:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:38:52,946:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:38:52,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:38:52,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:38:52,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:38:52,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:38:52,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:38:52,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:38:52,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:38:52,955:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:38:52,955:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:38:52,955:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:38:52,956:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:38:52,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:38:52,963:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 14:38:52,963:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 14:38:52,963:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 14:38:52,966:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = pd.DataFrame(self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'])

2025-01-21 14:46:03,783:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:46:03,783:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:46:04,067:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:46:04,196:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:46:04,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:46:04,321:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:46:04,384:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:46:04,386:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:46:04,386:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:46:04,386:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:46:04,386:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:46:04,388:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:46:04,389:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:46:04,390:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:46:04,391:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:46:04,395:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:46:04,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:46:04,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:46:04,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:46:04,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:46:04,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:46:04,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:46:04,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:46:04,408:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 14:46:04,409:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 14:46:04,409:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 14:46:04,411:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = pd.DataFrame(self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'])

2025-01-21 14:51:42,408:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:51:42,409:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:51:42,681:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:51:42,792:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:51:42,885:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:51:42,909:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:51:42,975:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:51:42,978:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:51:42,978:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:51:42,979:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:51:42,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:51:42,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:51:42,981:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:51:42,982:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:51:42,982:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:51:42,986:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:51:42,987:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:51:42,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:51:42,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:51:42,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:51:42,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:51:42,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:51:42,990:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:51:42,996:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 14:51:42,997:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 14:51:42,997:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 14:51:42,999:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = pd.DataFrame(self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'])

2025-01-21 14:56:13,166:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:56:13,167:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:56:13,482:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:56:13,626:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:56:13,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:56:13,748:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:56:13,798:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:56:13,799:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:56:13,799:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:56:13,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:56:13,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:56:13,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:56:13,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:56:13,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:56:13,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:56:13,806:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:56:13,808:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:56:13,808:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:56:13,808:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:56:13,808:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:56:13,809:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:56:13,810:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:56:13,810:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:56:13,821:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 14:56:13,822:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 14:56:13,822:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 14:56:13,826:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 14:59:15,524:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:59:15,524:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:59:15,828:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:59:15,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 14:59:16,061:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 14:59:16,086:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 14:59:16,150:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 14:59:16,152:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 14:59:16,152:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 14:59:16,152:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 14:59:16,153:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 14:59:16,153:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:59:16,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:59:16,155:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 14:59:16,155:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:59:16,160:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 14:59:16,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 14:59:16,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 14:59:16,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 14:59:16,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 14:59:16,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 14:59:16,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 14:59:16,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 14:59:16,171:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 14:59:16,171:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 14:59:16,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 14:59:16,176:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 15:03:01,316:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:03:01,317:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:03:01,643:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:03:01,902:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 15:03:02,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 15:03:02,046:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 15:03:02,120:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 15:03:02,126:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 15:03:02,127:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 15:03:02,129:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 15:03:02,132:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 15:03:02,137:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:03:02,141:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:03:02,143:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 15:03:02,146:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:03:02,161:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:03:02,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 15:03:02,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 15:03:02,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 15:03:02,166:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 15:03:02,167:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:03:02,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:03:02,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:03:02,178:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 15:03:02,178:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 15:03:02,179:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 15:03:02,183:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 15:06:36,873:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:06:36,873:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:06:37,160:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:06:37,296:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 15:06:37,404:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 15:06:37,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 15:06:37,489:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 15:06:37,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 15:06:37,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 15:06:37,491:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 15:06:37,491:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 15:06:37,492:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:06:37,492:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:06:37,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 15:06:37,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:06:37,498:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:06:37,500:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 15:06:37,501:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 15:06:37,501:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 15:06:37,502:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 15:06:37,502:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:06:37,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:06:37,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:06:37,509:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 15:06:37,510:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 15:06:37,510:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 15:06:37,513:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 15:11:19,394:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:11:19,394:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:11:19,690:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:11:19,849:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 15:11:19,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 15:11:19,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 15:11:20,032:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 15:11:20,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 15:11:20,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 15:11:20,035:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 15:11:20,035:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 15:11:20,036:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:11:20,036:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:11:20,037:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 15:11:20,037:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:11:20,041:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:11:20,042:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 15:11:20,042:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 15:11:20,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 15:11:20,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 15:11:20,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:11:20,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:11:20,045:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:11:20,051:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 15:11:20,051:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 15:11:20,052:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 15:11:20,054:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 15:13:26,537:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:13:26,538:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:13:26,871:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:13:27,039:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 15:13:27,148:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 15:13:27,177:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 15:13:27,245:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 15:13:27,246:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 15:13:27,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 15:13:27,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 15:13:27,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 15:13:27,250:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:13:27,251:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:13:27,253:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 15:13:27,254:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:13:27,259:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:13:27,261:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 15:13:27,261:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 15:13:27,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 15:13:27,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 15:13:27,263:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:13:27,264:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:13:27,264:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:13:27,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 15:13:27,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 15:13:27,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 15:13:27,281:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 15:18:14,416:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:18:14,416:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:18:14,702:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:18:14,835:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 15:18:14,924:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 15:18:14,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 15:18:15,013:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 15:18:15,016:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 15:18:15,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 15:18:15,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 15:18:15,018:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 15:18:15,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:18:15,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:18:15,021:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 15:18:15,021:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:18:15,025:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:18:15,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 15:18:15,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 15:18:15,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 15:18:15,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 15:18:15,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:18:15,029:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:18:15,029:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:18:15,035:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 15:18:15,036:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 15:18:15,036:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 15:18:15,038:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 15:35:45,923:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:35:45,923:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:35:46,201:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:35:46,331:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 15:35:46,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 15:35:46,455:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 15:35:46,525:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 15:35:46,529:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 15:35:46,529:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 15:35:46,530:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 15:35:46,530:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 15:35:46,532:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:35:46,533:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:35:46,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 15:35:46,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:35:46,539:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 15:35:46,540:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 15:35:46,540:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 15:35:46,540:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 15:35:46,541:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 15:35:46,541:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 15:35:46,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 15:35:46,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 15:35:46,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 15:35:46,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 15:35:46,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 15:35:46,552:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:04:22,465:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:04:22,466:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:04:22,766:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:04:22,890:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:04:22,974:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:04:23,004:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:04:23,064:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:04:23,066:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:04:23,066:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:04:23,066:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:04:23,067:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:04:23,067:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:04:23,069:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:04:23,069:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 16:04:23,070:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:04:23,074:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:04:23,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:04:23,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:04:23,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:04:23,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:04:23,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:04:23,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:04:23,078:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:04:23,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:04:23,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:04:23,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:04:23,087:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:09:16,671:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:09:16,671:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:09:16,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:09:17,077:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:09:17,181:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:09:17,208:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:09:17,280:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:09:17,283:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:09:17,283:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:09:17,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:09:17,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:09:17,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:09:17,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:09:17,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 16:09:17,287:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:09:17,291:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:09:17,292:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:09:17,292:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:09:17,292:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:09:17,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:09:17,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:09:17,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:09:17,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:09:17,301:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:09:17,301:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:09:17,301:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:09:17,304:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:13:34,885:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:13:34,885:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:13:35,167:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:13:35,313:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:13:35,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:13:35,452:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:13:35,512:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:13:35,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:13:35,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:13:35,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:13:35,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:13:35,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:13:35,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:13:35,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 16:13:35,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:13:35,521:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:13:35,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:13:35,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:13:35,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:13:35,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:13:35,524:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:13:35,525:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:13:35,525:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:13:35,531:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:13:35,532:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:13:35,532:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:13:35,535:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:16:13,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:16:13,393:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:16:13,662:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:16:13,774:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:16:13,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:16:13,888:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:16:13,944:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:16:13,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:16:13,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:16:13,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:16:13,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:16:13,950:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:16:13,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:16:13,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 16:16:13,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:16:13,955:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:16:13,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:16:13,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:16:13,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:16:13,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:16:13,958:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:16:13,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:16:13,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:16:13,965:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:16:13,965:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:16:13,966:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:16:13,968:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:16:14,208:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [16:16:14] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-21 16:22:06,172:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:22:06,172:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:22:06,453:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:22:06,577:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:22:06,662:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:22:06,688:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:22:06,746:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:22:06,748:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:22:06,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:22:06,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:22:06,750:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:22:06,751:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:22:06,751:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:22:06,752:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 16:22:06,752:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:22:06,757:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:22:06,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:22:06,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:22:06,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:22:06,759:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:22:06,759:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:22:06,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:22:06,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:22:06,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:22:06,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:22:06,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:22:06,769:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:22:07,013:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [16:22:07] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-21 16:25:59,902:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:25:59,902:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:26:00,190:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:26:00,319:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:26:00,410:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:26:00,434:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:26:00,485:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:26:00,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:26:00,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:26:00,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:26:00,488:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:26:00,488:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:26:00,489:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:26:00,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 16:26:00,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:26:00,494:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:26:00,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:26:00,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:26:00,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:26:00,497:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:26:00,498:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:26:00,499:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:26:00,500:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:26:00,507:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:26:00,507:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:26:00,507:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:26:00,510:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:26:00,746:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [16:26:00] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-21 16:36:16,210:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:36:16,210:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:36:16,489:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:36:16,628:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:36:16,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:36:16,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:36:16,814:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:36:16,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:36:16,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:36:16,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:36:16,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:36:16,817:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:36:16,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:36:16,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  @abstractmethod

2025-01-21 16:36:16,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  def apply_calculating_rate_change(self):

2025-01-21 16:36:16,824:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:36:16,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:36:16,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:36:16,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:36:16,826:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:36:16,826:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:36:16,827:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:36:16,828:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:36:16,834:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:36:16,834:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:36:16,835:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:36:16,838:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:36:17,046:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [16:36:17] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-21 16:41:59,865:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:41:59,865:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:42:00,152:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:42:00,287:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:42:00,380:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:42:00,406:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:42:00,466:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:42:00,468:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:42:00,468:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:42:00,468:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:42:00,469:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:42:00,469:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:42:00,470:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:42:00,471:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 16:42:00,471:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:42:00,475:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:42:00,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:42:00,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:42:00,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:42:00,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:42:00,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:42:00,479:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:42:00,479:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:42:00,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:42:00,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:42:00,491:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:42:00,493:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:42:00,703:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [16:42:00] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-21 16:42:00,845:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:42:00,845:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:42:01,137:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:42:01,138:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:42:01,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:42:01,258:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:49:40,195:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:49:40,195:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:49:40,484:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:49:40,628:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:49:40,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:49:40,759:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-21 16:49:40,811:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-21 16:49:40,812:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-21 16:49:40,813:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-21 16:49:40,813:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-21 16:49:40,814:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-21 16:49:40,814:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:49:40,815:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:49:40,815:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-21 16:49:40,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:49:40,820:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:49:40,821:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-21 16:49:40,821:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-21 16:49:40,823:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-21 16:49:40,823:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-21 16:49:40,823:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-21 16:49:40,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-21 16:49:40,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-21 16:49:40,831:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-21 16:49:40,832:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-21 16:49:40,832:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-21 16:49:40,835:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-21 16:49:41,016:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [16:49:41] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-21 16:49:41,131:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:49:41,131:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:49:41,432:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-21 16:49:41,433:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-21 16:49:41,525:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-21 16:49:41,543:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:06:04,842:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:06:04,843:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:06:05,247:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:06:05,501:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:06:05,586:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:06:05,627:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:06:05,670:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:06:05,671:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:06:05,671:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:06:05,671:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:06:05,672:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:06:05,673:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:06:05,673:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:06:05,674:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:06:05,674:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:06:05,679:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:06:05,681:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:06:05,682:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:06:05,682:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:06:05,683:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:06:05,684:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:06:05,685:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:06:05,685:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:06:05,695:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:06:05,696:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:06:05,696:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:06:05,700:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:06:06,044:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:06:06] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:06:06,193:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:06:06,193:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:06:06,481:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:06:06,482:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:06:06,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:06:06,596:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:08:31,914:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:08:31,914:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:08:32,187:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:08:32,329:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:08:32,419:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:08:32,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:08:32,502:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:08:32,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:08:32,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:08:32,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:08:32,506:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:08:32,506:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:08:32,507:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:08:32,508:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:08:32,508:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:08:32,514:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:08:32,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:08:32,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:08:32,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:08:32,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:08:32,518:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:08:32,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:08:32,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:08:32,528:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:08:32,529:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:08:32,529:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:08:32,532:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:08:32,773:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:08:32] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:08:32,892:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:08:32,892:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:08:33,160:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:08:33,160:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:08:33,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:08:33,265:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:11:49,297:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:11:49,297:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:11:49,609:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:11:49,740:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:11:49,835:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:11:49,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:11:49,922:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:11:49,924:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:11:49,925:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:11:49,925:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:11:49,926:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:11:49,926:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:11:49,927:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:11:49,928:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:11:49,928:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:11:49,932:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:11:49,934:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:11:49,934:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:11:49,934:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:11:49,935:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:11:49,935:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:11:49,937:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:11:49,937:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:11:49,943:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:11:49,944:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:11:49,944:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:11:49,946:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:11:50,145:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:11:50] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:11:50,274:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:11:50,274:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:11:50,564:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:11:50,564:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:11:50,656:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:11:50,674:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:15:18,809:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:15:18,809:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:15:19,119:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:15:19,246:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:15:19,342:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:15:19,369:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:15:19,430:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:15:19,433:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:15:19,433:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:15:19,434:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:15:19,434:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:15:19,435:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:15:19,436:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:15:19,436:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:15:19,437:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:15:19,441:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:15:19,442:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:15:19,442:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:15:19,443:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:15:19,443:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:15:19,444:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:15:19,444:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:15:19,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:15:19,452:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:15:19,452:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:15:19,452:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:15:19,455:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:15:19,644:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:15:19] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:15:19,772:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:15:19,772:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:15:20,074:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:15:20,075:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:15:20,194:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:15:20,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:20:38,291:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:20:38,291:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:20:38,555:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:20:38,686:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:20:38,797:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:20:38,834:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:20:38,892:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:20:38,896:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:20:38,896:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:20:38,897:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:20:38,897:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:20:38,898:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:20:38,898:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:20:38,899:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:20:38,900:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:20:38,905:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:20:38,906:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:20:38,906:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:20:38,907:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:20:38,907:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:20:38,908:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:20:38,909:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:20:38,909:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:20:38,917:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:20:38,917:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:20:38,918:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:20:38,921:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:20:39,096:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:20:39] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:20:39,228:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:20:39,228:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:20:39,513:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:20:39,523:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:20:39,606:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:20:39,624:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:23:20,890:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:23:20,890:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:23:21,156:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:23:21,279:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:23:21,369:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:23:21,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:23:21,452:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:23:21,454:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:23:21,454:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:23:21,455:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:23:21,455:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:23:21,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:23:21,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:23:21,457:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:23:21,457:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:23:21,461:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:23:21,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:23:21,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:23:21,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:23:21,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:23:21,464:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:23:21,464:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:23:21,465:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:23:21,471:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:23:21,472:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:23:21,472:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:23:21,474:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:23:21,699:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:23:21] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:23:21,827:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:23:21,828:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:23:22,109:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:23:22,109:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:23:22,200:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:23:22,222:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:25:56,656:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:25:56,657:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:25:56,914:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:25:57,032:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:25:57,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:25:57,159:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:25:57,217:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:25:57,219:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:25:57,220:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:25:57,221:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:25:57,221:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:25:57,222:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:25:57,222:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:25:57,223:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:25:57,223:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:25:57,229:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:25:57,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:25:57,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:25:57,237:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:25:57,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:25:57,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:25:57,243:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:25:57,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:25:57,253:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:25:57,254:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:25:57,254:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:25:57,257:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:25:57,445:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:25:57] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:25:57,569:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:25:57,569:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:25:57,857:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:25:57,857:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:25:57,953:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:25:57,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:25:58,107:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:25:58,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:25:58,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:25:58,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:25:58,109:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:25:58,110:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:25:58,111:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:25:58,111:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:25:58,112:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:28:08,915:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:28:08,916:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:28:09,185:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:28:09,298:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:28:09,378:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:28:09,406:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:28:09,475:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:28:09,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:28:09,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:28:09,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:28:09,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:28:09,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:28:09,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:28:09,479:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:28:09,479:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:28:09,483:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:28:09,484:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:28:09,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:28:09,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:28:09,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:28:09,486:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:28:09,486:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:28:09,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:28:09,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:28:09,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:28:09,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:28:09,496:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:28:09,738:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:28:09] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:28:09,897:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:28:09,898:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:28:10,164:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:28:10,165:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:28:10,259:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:28:10,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:28:10,415:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:28:10,416:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:28:10,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:28:10,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:28:10,418:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:28:10,418:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:28:10,419:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:28:10,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:28:10,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:28:10,514:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:28:10,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:28:10,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:28:10,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:28:10,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:36:19,525:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:36:19,526:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:36:19,799:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:36:19,930:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:36:20,029:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:36:20,055:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:36:20,096:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:36:20,097:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:36:20,097:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:36:20,098:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:36:20,098:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:36:20,100:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:36:20,101:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:36:20,101:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:36:20,102:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:36:20,106:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:36:20,107:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:36:20,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:36:20,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:36:20,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:36:20,109:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:36:20,109:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:36:20,110:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:79: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:36:20,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:36:20,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:36:20,120:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:36:20,122:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:36:20,306:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:36:20] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:36:20,424:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:36:20,424:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:36:20,703:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:36:20,703:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:36:20,798:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:36:20,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:36:20,946:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:36:20,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:36:20,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:36:20,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:36:20,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:36:20,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:36:20,950:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:36:20,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:36:20,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:36:21,031:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:36:21,032:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:36:21,033:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:36:21,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:36:21,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:40:22,665:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:40:22,665:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:40:22,952:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:40:23,085:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:40:23,198:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:40:23,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:40:23,295:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:40:23,297:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:40:23,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:40:23,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:40:23,299:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:40:23,300:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:40:23,301:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:40:23,302:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:40:23,303:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:40:23,307:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:40:23,308:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:40:23,308:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:40:23,309:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:40:23,309:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:40:23,310:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:40:23,310:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:40:23,311:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:40:23,319:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:40:23,319:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:40:23,319:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:40:23,322:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:40:23,546:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:40:23] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:40:23,673:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:40:23,673:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:40:23,969:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:40:23,970:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:40:24,071:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:40:24,092:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:40:24,224:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:40:24,225:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:40:24,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:40:24,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:40:24,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:40:24,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:40:24,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:40:24,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:40:24,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:40:24,323:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:40:24,325:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:40:24,325:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:40:24,325:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:40:24,326:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:44:14,268:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:44:14,268:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:44:14,537:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:44:14,665:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:44:14,761:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:44:14,788:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:44:14,851:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:44:14,853:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:44:14,853:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:44:14,855:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:44:14,855:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:44:14,855:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:44:14,856:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:44:14,856:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:44:14,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:44:14,861:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:44:14,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:44:14,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:44:14,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:44:14,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:44:14,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:44:14,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:44:14,865:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:44:14,872:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:44:14,872:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:44:14,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:44:14,875:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:44:15,115:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:44:15] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:44:15,240:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:44:15,240:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:44:15,527:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:44:15,527:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:44:15,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:44:15,644:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:44:15,814:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:44:15,815:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:44:15,815:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:44:15,815:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:44:15,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:44:15,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:44:15,817:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:44:15,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:44:15,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:44:15,909:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:44:15,910:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:44:15,910:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:44:15,911:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:44:15,911:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:47:28,643:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:47:28,644:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:47:28,917:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:47:29,049:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:47:29,146:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:47:29,176:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:47:29,236:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:47:29,238:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:47:29,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:47:29,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:47:29,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:47:29,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:47:29,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:47:29,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:47:29,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:47:29,246:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:47:29,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:47:29,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:47:29,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:47:29,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:47:29,249:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:47:29,250:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:47:29,250:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:47:29,257:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:47:29,257:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:47:29,258:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:47:29,260:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:47:29,482:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:47:29] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:47:29,632:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:47:29,632:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:47:29,917:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:47:29,918:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:47:30,037:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:47:30,060:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:47:30,181:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:47:30,182:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:47:30,182:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:47:30,183:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:47:30,183:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:47:30,184:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:47:30,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:47:30,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:47:30,186:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:47:30,276:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:47:30,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:47:30,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:47:30,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:47:30,279:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:50:07,769:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:50:07,769:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:50:08,049:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:50:08,179:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:50:08,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:50:08,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:50:08,346:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:50:08,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:50:08,348:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:50:08,348:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:50:08,348:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:50:08,349:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:50:08,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:50:08,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:50:08,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:50:08,354:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:50:08,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:50:08,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:50:08,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:50:08,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:50:08,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:50:08,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:50:08,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:50:08,364:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:50:08,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:50:08,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:50:08,368:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:50:08,590:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:50:08] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:50:08,725:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:50:08,726:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:50:09,006:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:50:09,006:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:50:09,100:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:50:09,125:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:50:09,267:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:50:09,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:50:09,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:50:09,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:50:09,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:50:09,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:50:09,271:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:50:09,272:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:50:09,272:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:50:09,347:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:50:09,348:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:50:09,349:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:50:09,349:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:50:09,349:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:55:29,747:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:55:29,747:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:55:30,030:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:55:30,175:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:55:30,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:55:30,302:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:55:30,367:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:55:30,370:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:55:30,370:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:55:30,371:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:55:30,371:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:55:30,371:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:55:30,372:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:55:30,372:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:55:30,374:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:55:30,377:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:55:30,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:55:30,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:55:30,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:55:30,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:55:30,380:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:55:30,381:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:55:30,381:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:55:30,388:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:55:30,389:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:55:30,390:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:55:30,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:55:30,614:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:55:30] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:55:30,729:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:55:30,729:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:55:31,015:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:55:31,015:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:55:31,112:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:55:31,135:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:55:31,270:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:55:31,271:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:55:31,272:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:55:31,272:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:55:31,273:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:55:31,274:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:55:31,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:55:31,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:55:31,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:55:31,355:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:55:31,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:55:31,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:55:31,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:55:31,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:55:31,437:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:55:31,438:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:55:31,438:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:55:31,442:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 09:59:12,468:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:59:12,469:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:59:12,741:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:59:12,885:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:59:12,985:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:59:13,018:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:59:13,073:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 09:59:13,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:59:13,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:59:13,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:59:13,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:59:13,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:59:13,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:59:13,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:59:13,078:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:59:13,082:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:59:13,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:59:13,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:59:13,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:59:13,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:59:13,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:59:13,086:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:59:13,086:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:59:13,092:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:59:13,093:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:59:13,093:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:59:13,095:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 09:59:13,311:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [09:59:13] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 09:59:13,438:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:59:13,439:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:59:13,706:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:59:13,707:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 09:59:13,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 09:59:13,821:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 09:59:13,983:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 09:59:13,984:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 09:59:13,984:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 09:59:13,985:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 09:59:13,985:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 09:59:13,986:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 09:59:13,987:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 09:59:13,987:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 09:59:13,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 09:59:14,066:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 09:59:14,067:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 09:59:14,068:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 09:59:14,068:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 09:59:14,069:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 09:59:14,150:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 09:59:14,151:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 09:59:14,151:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 09:59:14,155:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:01:12,886:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:12,887:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:13,156:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:13,297:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:13,385:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:13,411:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:13,478:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:13,480:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:13,480:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:13,480:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:13,481:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:13,481:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:13,482:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:13,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:13,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:13,490:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:13,492:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:13,492:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:13,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:13,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:13,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:13,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:13,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:13,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:13,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:13,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:13,506:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:01:13,693:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [10:01:13] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 10:01:13,808:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:13,808:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:14,085:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:14,085:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:14,173:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:14,198:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:14,328:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:01:14,329:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:14,329:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:14,329:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:14,330:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:14,331:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:14,331:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:14,332:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:14,332:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:14,425:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:14,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:14,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:14,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:14,427:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:14,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:14,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:14,506:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:14,509:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:01:16,765:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:16,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:16,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:16,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:16,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:16,768:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:16,769:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:16,770:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:16,770:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:16,774:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:16,775:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:16,776:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:16,776:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:16,776:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:16,777:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:16,777:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:16,778:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:16,778:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:16,783:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:16,783:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:17,100:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:17,100:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:17,209:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:17,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:17,293:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:17,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:17,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:17,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:17,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:17,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:17,296:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:17,296:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:17,297:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:17,302:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:17,303:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:17,303:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:17,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:17,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:17,305:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:17,306:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:17,306:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:17,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:17,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:17,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:17,318:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:01:17,590:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:17,590:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:17,885:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:17,885:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:17,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:17,997:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:18,157:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:01:18,158:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:18,159:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:18,159:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:18,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:18,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:18,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:18,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:18,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:18,265:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:18,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:18,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:18,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:18,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:18,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:18,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:18,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:18,359:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:01:19,616:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:19,616:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:19,617:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:19,617:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:19,617:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:19,618:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:19,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:19,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:19,620:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:19,623:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:19,624:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:19,624:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:19,624:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:19,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:19,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:19,626:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:19,626:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:19,627:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:19,632:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:19,632:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:19,901:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:19,901:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:20,003:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:20,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:20,082:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:20,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:20,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:20,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:20,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:20,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:20,087:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:20,087:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:20,088:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:20,093:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:20,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:20,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:20,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:20,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:20,095:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:20,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:20,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:20,102:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:20,103:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:20,103:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:20,105:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:01:20,443:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:20,443:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:20,713:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:20,713:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:20,797:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:20,811:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:20,952:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:01:20,953:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:20,953:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:20,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:20,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:20,955:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:20,956:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:20,956:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:20,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:21,032:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:21,033:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:21,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:21,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:21,035:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:21,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:21,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:21,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:21,118:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:01:21,886:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:21,887:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:21,887:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:21,887:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:21,888:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:21,889:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:21,889:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:21,890:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:21,890:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:21,893:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:21,894:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:21,894:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:21,894:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:21,895:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:21,895:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:21,896:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:21,896:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:21,896:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:21,902:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:21,902:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:22,171:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:22,171:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:22,265:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:22,282:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:22,341:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:22,342:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:22,342:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:22,343:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:22,343:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:22,344:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:22,344:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:22,345:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:22,345:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:22,349:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:22,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:22,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:22,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:22,351:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:22,351:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:22,352:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:22,353:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:22,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:22,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:22,359:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:22,361:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:01:22,683:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:22,683:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:22,951:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:22,951:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:23,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:23,060:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:23,195:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:01:23,196:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:23,196:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:23,197:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:23,197:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:23,198:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:23,199:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:23,199:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:23,200:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:23,279:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:23,280:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:23,280:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:23,281:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:23,281:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:23,364:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:23,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:23,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:23,368:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:01:43,238:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:43,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:43,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:43,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:43,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:43,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:43,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:43,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:43,243:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:43,246:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:43,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:43,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:43,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:43,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:43,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:43,249:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:43,249:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:43,249:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:43,255:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:43,255:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:43,539:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:43,539:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:43,642:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:43,678:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:43,730:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:43,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:43,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:43,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:43,732:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:43,733:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:43,734:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:43,734:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:43,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:43,739:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:43,740:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:43,740:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:43,741:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:43,741:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:43,741:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:43,743:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:43,743:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:43,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:43,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:43,750:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:43,752:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:01:44,064:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:44,064:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:44,358:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:44,358:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:44,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:44,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:44,610:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:01:44,611:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:44,611:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:44,612:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:44,612:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:44,613:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:44,614:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:44,614:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:44,615:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:44,695:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:44,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:44,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:44,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:44,698:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:44,782:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:44,783:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:44,783:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:44,787:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:01:47,008:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:47,010:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:47,010:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:47,010:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:47,011:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:47,011:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:47,012:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:47,012:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:47,012:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:47,016:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:47,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:47,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:47,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:47,018:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:47,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:47,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:47,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:47,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:47,026:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:47,026:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:47,293:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:47,293:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:47,382:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:47,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:47,467:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:47,468:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:47,468:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:47,469:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:47,469:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:47,470:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:47,470:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:47,471:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:47,471:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:47,475:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:47,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:47,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:47,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:47,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:47,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:47,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:47,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:47,484:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:47,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:47,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:47,487:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:01:47,766:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:47,767:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:48,037:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:48,037:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:48,133:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:48,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:48,306:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:01:48,307:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:48,307:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:48,308:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:48,308:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:48,309:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:48,310:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:48,311:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:48,311:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:48,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:48,393:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:48,394:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:48,394:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:48,395:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:48,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:48,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:48,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:48,500:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:01:54,534:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:54,535:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:54,535:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:54,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:54,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:54,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:54,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:54,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:54,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:54,541:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:54,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:54,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:01:54,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:54,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:54,543:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:54,543:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:54,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:54,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:54,550:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:54,550:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:54,836:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:54,836:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:54,944:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:54,960:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:55,025:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:01:55,026:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:55,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:55,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:55,029:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:55,030:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:55,032:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:55,033:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:55,033:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:55,049:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:55,052:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:55,052:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:55,052:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:55,053:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:55,053:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:55,054:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:55,054:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:55,061:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:55,061:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:55,061:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:55,063:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:01:55,411:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:55,412:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:55,707:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:55,707:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:01:55,790:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:01:55,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:01:55,934:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:01:55,935:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:01:55,935:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:01:55,935:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:01:55,936:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:01:55,937:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:01:55,937:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:01:55,938:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:01:55,939:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:01:56,022:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:01:56,023:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:01:56,023:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:01:56,024:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:01:56,024:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:01:56,109:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:01:56,110:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:01:56,110:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:01:56,113:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:02:05,950:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:05,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:05,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:05,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:05,952:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:05,953:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:05,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:05,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:05,955:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:05,959:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:05,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:05,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:05,960:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:05,960:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:05,960:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:05,961:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:05,961:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:05,962:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:05,967:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:05,967:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:06,238:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:06,238:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:06,326:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:06,342:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:06,397:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:06,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:06,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:06,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:06,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:06,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:06,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:06,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:06,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:06,406:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:06,407:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:06,407:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:06,407:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:06,408:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:06,408:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:06,409:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:06,410:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:06,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:06,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:06,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:06,423:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:02:06,721:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:06,723:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:07,002:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:07,002:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:07,090:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:07,102:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:07,229:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:02:07,230:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:07,230:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:07,231:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:07,231:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:07,232:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:07,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:07,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:07,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:07,314:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:07,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:07,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:07,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:07,316:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:07,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:07,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:07,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:07,400:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:02:08,627:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:08,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:08,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:08,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:08,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:08,632:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:08,633:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:08,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:08,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:08,638:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:08,638:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:08,639:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:08,639:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:08,639:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:08,640:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:08,640:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:08,641:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:08,641:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:08,646:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:08,646:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:08,912:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:08,913:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:09,001:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:09,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:09,084:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:09,087:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:09,087:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:09,088:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:09,089:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:09,089:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:09,090:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:09,091:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:09,091:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:09,095:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:09,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:09,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:09,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:09,097:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:09,097:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:09,098:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:09,098:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:09,104:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:09,104:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:09,106:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:09,108:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:02:09,459:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:09,460:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:09,732:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:09,732:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:09,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:09,834:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:09,971:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:02:09,972:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:09,972:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:09,972:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:09,973:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:09,974:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:09,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:09,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:09,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:10,062:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:10,064:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:10,064:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:10,064:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:10,065:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:10,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:10,155:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:10,156:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:10,159:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:02:11,648:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:11,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:11,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:11,651:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:11,652:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:11,652:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:11,653:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:11,653:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:11,654:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:11,657:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:11,657:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:11,658:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:11,658:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:11,658:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:11,659:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:11,659:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:11,659:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:11,660:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:11,665:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:11,665:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:11,933:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:11,933:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:12,031:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:12,045:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:12,109:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:12,112:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:12,112:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:12,113:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:12,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:12,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:12,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:12,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:12,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:12,120:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:12,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:12,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:12,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:12,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:12,123:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:12,123:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:12,124:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:12,129:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:12,129:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:12,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:12,132:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:02:12,462:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:12,462:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:12,729:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:12,729:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:12,822:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:12,835:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:12,975:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:02:12,976:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:12,976:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:12,977:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:12,977:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:12,978:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:12,979:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:12,979:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:12,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:13,053:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:13,054:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:13,054:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:13,055:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:13,055:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:13,129:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:13,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:13,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:13,133:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:02:14,620:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:14,622:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:14,622:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:14,623:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:14,623:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:14,624:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:14,624:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:14,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:14,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:14,628:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:14,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:14,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:14,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:14,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:14,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:14,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:14,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:14,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:14,638:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:14,638:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:14,891:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:14,899:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:14,984:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:15,012:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:15,070:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:15,073:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:15,073:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:15,074:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:15,074:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:15,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:15,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:15,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:15,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:15,080:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:15,081:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:15,081:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:15,082:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:15,082:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:15,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:15,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:15,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:15,090:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:15,090:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:15,091:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:15,093:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:02:15,401:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:15,401:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:15,696:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:15,696:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:15,785:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:15,814:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:15,957:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:02:15,958:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:15,958:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:15,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:15,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:15,960:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:15,961:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:15,961:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:15,962:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:16,042:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:16,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:16,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:16,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:16,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:16,125:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:16,126:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:16,126:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:16,130:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:02:46,549:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:46,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:46,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:46,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:46,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:46,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:46,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:46,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:46,554:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:46,558:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:46,558:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:46,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:46,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:46,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:46,560:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:46,560:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:46,561:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:46,562:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:46,568:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:46,568:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:46,851:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:46,851:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:46,941:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:46,955:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:47,011:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:47,011:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:47,012:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:47,012:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:47,013:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:47,013:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:47,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:47,015:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:47,015:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:47,019:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:47,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:47,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:47,021:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:47,021:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:47,021:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:47,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:47,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:47,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:47,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:47,029:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:47,031:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:02:47,325:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:47,325:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:47,606:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:47,606:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:47,716:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:47,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:47,881:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:02:47,882:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:47,882:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:47,882:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:47,883:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:47,883:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:47,884:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:47,885:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:47,885:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:47,962:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:47,964:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:47,964:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:47,964:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:47,965:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:48,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:48,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:48,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:48,048:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:02:49,452:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:49,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:49,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:49,454:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:49,454:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:49,455:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:49,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:49,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:49,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:49,460:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:49,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:49,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:02:49,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:49,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:49,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:49,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:49,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:49,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:49,468:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:49,468:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:49,759:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:49,759:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:49,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:49,891:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:49,944:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:02:49,945:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:49,945:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:49,946:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:49,946:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:49,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:49,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:49,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:49,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:49,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:49,953:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:49,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:49,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:49,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:49,956:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:49,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:49,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:49,962:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:49,963:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:49,963:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:49,965:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:02:50,291:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:50,292:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:50,568:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:50,568:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:02:50,668:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:02:50,694:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:02:50,821:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:02:50,822:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:02:50,822:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:02:50,823:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:02:50,823:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:02:50,824:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:02:50,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:02:50,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:02:50,826:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:02:50,897:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:02:50,899:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:02:50,899:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:02:50,899:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:02:50,900:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:02:50,979:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:02:50,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:02:50,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:02:50,984:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:03:07,899:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:07,900:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:07,900:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:03:07,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:07,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:07,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:07,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:07,903:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:07,903:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:07,906:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:07,907:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:07,907:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:03:07,907:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:07,908:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:07,908:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:07,909:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:07,909:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:07,909:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:07,915:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:07,915:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:08,178:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:08,178:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:03:08,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:03:08,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:03:08,378:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:08,380:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:08,380:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:03:08,381:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:08,381:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:08,382:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:08,382:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:08,383:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:08,383:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:08,388:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:08,389:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:03:08,390:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:03:08,390:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:03:08,390:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:03:08,391:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:08,391:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:08,392:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:08,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:03:08,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:03:08,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:03:08,400:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:03:08,721:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:08,721:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:08,991:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:08,992:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:03:09,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:03:09,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:03:09,243:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:03:09,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:09,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:03:09,245:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:09,245:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:09,246:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:09,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:09,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:09,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:09,322:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:09,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:03:09,324:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:03:09,324:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:03:09,324:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:03:09,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:03:09,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:03:09,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:03:09,403:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:03:17,825:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:17,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:17,826:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:03:17,827:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:17,829:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:17,829:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:17,830:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:17,830:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:17,831:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:17,834:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:17,835:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:17,835:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:03:17,836:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:17,836:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:17,836:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:17,838:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:17,838:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:17,838:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:17,843:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:17,843:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:18,116:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:18,116:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:03:18,211:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:03:18,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:03:18,292:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:18,292:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:18,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:03:18,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:18,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:18,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:18,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:18,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:18,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:18,302:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:18,303:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:03:18,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:03:18,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:03:18,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:03:18,305:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:18,306:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:18,307:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:18,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:03:18,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:03:18,314:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:03:18,316:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:03:18,636:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:18,637:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:18,922:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:18,922:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:03:19,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:03:19,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:03:19,183:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:03:19,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:19,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:03:19,186:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:19,187:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:19,188:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:19,189:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:19,190:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:19,191:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:19,280:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:19,281:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:03:19,282:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:03:19,282:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:03:19,282:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:03:19,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:03:19,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:03:19,366:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:03:19,369:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:03:24,757:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:24,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:24,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:03:24,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:24,759:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:24,759:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:24,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:24,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:24,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:24,764:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:24,764:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:24,765:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:03:24,765:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:24,765:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:24,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:24,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:24,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:24,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:24,773:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:24,774:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:25,057:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:25,058:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:03:25,146:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:03:25,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:03:25,229:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:03:25,231:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:25,231:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:03:25,232:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:25,232:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:25,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:25,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:25,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:25,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:25,239:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:25,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:03:25,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:03:25,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:03:25,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:03:25,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:25,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:25,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:25,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:03:25,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:03:25,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:03:25,250:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:03:25,569:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:25,569:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:25,852:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:25,852:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:03:25,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:03:25,946:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:03:26,075:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:03:26,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:03:26,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:03:26,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:03:26,078:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:03:26,078:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:03:26,079:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:03:26,080:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:03:26,080:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:03:26,181:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:03:26,182:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:03:26,183:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:03:26,183:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:03:26,184:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:03:26,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:03:26,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:03:26,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:03:26,274:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:04:06,363:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:06,364:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:06,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:06,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:06,366:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:06,367:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:06,368:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:06,368:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:06,369:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:06,373:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:06,374:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:06,374:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:06,374:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:06,375:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:06,375:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:06,376:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:06,376:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:06,376:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:06,382:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:06,382:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:06,675:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:06,678:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:06,776:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:06,794:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:06,838:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:06,839:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:06,840:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:06,840:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:06,841:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:06,841:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:06,842:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:06,843:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:06,843:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:06,848:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:06,849:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:06,849:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:06,850:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:06,851:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:06,852:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:06,853:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:06,854:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:06,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:06,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:06,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:06,865:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:04:07,157:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:07,158:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:07,428:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:07,429:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:07,512:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:07,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:07,649:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:04:07,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:07,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:07,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:07,651:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:07,652:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:07,652:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:07,653:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:07,653:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:07,748:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:07,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:07,750:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:07,750:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:07,750:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:07,832:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:07,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:07,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:07,836:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:04:10,457:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:10,459:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:10,459:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:10,459:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:10,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:10,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:10,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:10,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:10,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:10,465:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:10,466:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:10,466:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:10,466:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:10,466:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:10,467:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:10,468:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:10,468:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:10,468:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:10,475:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:10,475:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:10,730:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:10,730:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:10,824:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:10,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:10,923:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:10,926:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:10,928:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:10,928:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:10,930:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:10,931:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:10,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:10,934:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:10,935:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:10,939:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:10,940:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:10,940:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:10,941:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:10,941:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:10,942:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:10,943:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:10,943:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:10,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:10,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:10,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:10,951:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:04:11,262:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:11,263:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:11,543:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:11,544:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:11,620:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:11,641:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:11,799:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:04:11,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:11,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:11,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:11,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:11,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:11,803:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:11,803:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:11,804:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:11,900:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:11,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:11,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:11,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:11,903:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:11,991:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:11,992:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:11,992:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:11,995:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:04:14,224:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:14,225:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:14,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:14,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:14,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:14,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:14,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:14,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:14,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:14,232:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:14,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:14,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:14,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:14,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:14,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:14,237:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:14,237:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:14,238:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:14,246:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:14,246:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:14,515:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:14,515:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:14,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:14,655:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:14,720:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:14,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:14,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:14,722:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:14,722:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:14,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:14,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:14,724:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:14,724:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:14,728:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:14,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:14,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:14,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:14,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:14,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:14,732:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:14,732:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:14,739:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:14,739:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:14,739:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:14,742:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:04:15,047:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:15,048:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:15,328:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:15,328:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:15,409:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:15,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:15,546:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:04:15,547:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:15,547:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:15,547:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:15,548:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:15,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:15,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:15,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:15,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:15,630:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:15,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:15,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:15,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:15,632:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:15,706:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:15,707:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:15,707:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:15,711:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:04:19,272:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:19,274:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:19,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:19,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:19,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:19,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:19,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:19,279:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:19,279:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:19,283:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:19,283:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:19,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:19,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:19,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:19,285:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:19,285:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:19,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:19,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:19,293:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:19,293:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:19,553:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:19,553:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:19,667:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:19,712:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:19,754:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:19,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:19,757:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:19,757:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:19,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:19,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:19,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:19,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:19,761:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:19,765:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:19,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:19,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:19,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:19,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:19,768:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:19,768:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:19,770:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:19,777:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:19,777:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:19,778:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:19,780:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:04:22,072:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:22,072:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:22,073:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:22,073:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:22,073:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:22,074:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:22,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:22,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:22,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:22,079:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:22,080:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:22,080:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:04:22,080:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:22,081:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:22,081:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:22,082:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:22,082:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:22,082:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:22,089:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:22,090:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:22,370:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:22,371:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:22,450:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:22,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:22,568:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:04:22,571:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:22,571:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:22,572:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:22,573:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:22,574:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:22,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:22,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:22,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:22,580:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:22,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:22,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:22,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:22,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:22,582:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:22,583:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:22,583:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:22,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:22,590:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:22,590:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:22,592:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:04:22,952:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:22,952:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:23,221:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:23,221:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:04:23,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:04:23,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:04:23,498:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:04:23,499:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:04:23,500:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:04:23,500:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:04:23,501:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:04:23,501:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:04:23,502:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:04:23,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:04:23,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:04:23,587:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:04:23,588:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:04:23,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:04:23,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:04:23,590:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:04:23,682:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:04:23,682:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:04:23,683:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:04:23,686:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:20:48,588:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:48,588:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:48,856:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:48,979:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:20:49,069:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:20:49,097:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:20:49,160:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:49,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:49,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:20:49,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:49,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:49,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:49,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:49,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:49,165:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:49,170:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:49,171:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:20:49,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:20:49,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:20:49,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:20:49,173:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:49,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:49,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:49,182:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:20:49,182:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:20:49,183:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:20:49,186:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:20:49,415:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [10:20:49] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 10:20:49,563:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:49,564:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:49,831:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:49,831:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:20:49,921:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:20:49,939:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:20:50,097:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:20:50,098:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:50,099:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:20:50,099:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:50,100:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:50,100:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:50,101:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:50,102:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:50,102:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:50,202:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:50,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:20:50,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:20:50,205:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:20:50,205:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:20:50,306:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:20:50,307:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:20:50,308:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:20:50,311:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:20:52,515:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:52,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:52,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:20:52,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:52,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:52,518:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:52,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:52,520:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:52,521:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:52,526:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:52,527:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:52,527:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:20:52,528:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:52,528:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:52,529:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:52,530:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:52,530:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:52,530:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:52,537:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:52,538:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:52,815:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:52,816:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:20:52,921:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:20:52,946:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:20:53,013:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:53,015:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:53,015:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:20:53,016:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:53,016:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:53,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:53,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:53,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:53,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:53,026:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:53,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:20:53,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:20:53,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:20:53,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:20:53,029:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:53,030:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:53,030:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:53,037:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:20:53,037:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:20:53,037:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:20:53,039:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:20:53,374:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:53,374:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:53,658:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:53,658:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:20:53,748:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:20:53,768:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:20:53,889:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:20:53,890:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:53,891:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:20:53,891:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:53,892:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:53,892:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:53,893:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:53,894:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:53,894:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:53,973:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:53,974:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:20:53,974:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:20:53,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:20:53,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:20:54,052:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:20:54,052:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:20:54,053:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:20:54,056:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:20:55,266:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:55,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:55,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:20:55,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:55,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:55,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:55,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:55,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:55,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:55,274:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:55,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:55,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:20:55,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:55,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:55,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:55,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:55,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:55,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:55,283:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:55,283:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:55,558:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:55,558:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:20:55,655:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:20:55,672:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:20:55,732:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:55,733:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:55,733:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:20:55,733:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:55,734:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:55,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:55,736:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:55,736:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:55,738:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:55,743:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:55,744:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:20:55,744:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:20:55,744:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:20:55,744:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:20:55,745:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:55,746:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:55,746:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:55,752:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:20:55,753:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:20:55,753:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:20:55,754:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:20:56,029:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:56,031:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:56,305:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:56,305:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:20:56,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:20:56,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:20:56,574:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:20:56,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:56,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:20:56,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:56,577:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:56,578:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:56,578:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:56,579:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:56,579:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:56,658:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:56,659:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:20:56,660:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:20:56,660:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:20:56,661:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:20:56,744:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:20:56,745:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:20:56,745:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:20:56,748:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:20:57,509:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:57,511:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:57,512:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:20:57,513:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:57,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:57,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:57,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:57,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:57,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:57,521:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:57,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:57,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:20:57,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:57,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:57,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:57,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:57,524:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:57,524:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:57,530:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:57,530:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:57,809:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:57,809:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:20:57,896:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:20:57,913:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:20:57,974:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:20:57,976:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:57,977:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:20:57,977:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:57,978:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:57,979:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:57,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:57,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:57,981:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:57,987:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:57,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:20:57,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:20:57,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:20:57,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:20:57,990:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:57,990:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:57,991:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:57,997:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:20:57,998:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:20:57,998:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:20:58,000:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:20:58,323:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:58,323:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:58,593:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:58,593:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:20:58,683:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:20:58,698:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:20:58,859:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:20:58,860:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:20:58,861:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:20:58,861:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:20:58,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:20:58,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:20:58,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:20:58,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:20:58,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:20:58,948:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:20:58,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:20:58,949:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:20:58,950:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:20:58,950:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:20:59,040:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:20:59,040:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:20:59,041:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:20:59,044:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:21:18,153:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:18,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:18,156:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:18,156:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:18,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:18,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:18,158:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:18,158:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:18,159:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:18,162:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:18,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:18,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:18,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:18,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:18,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:18,165:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:18,165:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:18,165:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:18,173:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:18,173:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:18,437:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:18,437:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:18,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:18,554:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:18,615:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:18,617:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:18,618:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:18,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:18,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:18,620:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:18,621:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:18,622:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:18,622:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:18,627:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:18,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:18,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:18,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:18,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:18,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:18,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:18,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:18,637:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:18,638:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:18,638:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:18,640:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:21:18,960:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:18,960:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:19,240:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:19,241:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:19,325:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:19,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:19,479:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:21:19,480:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:19,480:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:19,481:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:19,481:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:19,482:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:19,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:19,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:19,484:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:19,562:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:19,563:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:19,563:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:19,563:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:19,564:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:19,643:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:19,643:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:19,644:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:19,647:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:21:21,812:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:21,813:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:21,814:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:21,814:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:21,815:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:21,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:21,817:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:21,817:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:21,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:21,822:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:21,822:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:21,822:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:21,823:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:21,824:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:21,824:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:21,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:21,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:21,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:21,831:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:21,831:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:22,101:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:22,101:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:22,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:22,238:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:22,309:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:22,310:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:22,311:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:22,311:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:22,312:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:22,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:22,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:22,314:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:22,314:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:22,320:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:22,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:22,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:22,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:22,324:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:22,324:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:22,325:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:22,326:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:22,333:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:22,333:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:22,334:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:22,336:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:21:22,652:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:22,652:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:22,931:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:22,931:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:23,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:23,071:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:23,215:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:21:23,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:23,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:23,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:23,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:23,219:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:23,220:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:23,220:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:23,221:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:23,296:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:23,297:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:23,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:23,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:23,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:23,375:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:23,375:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:23,376:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:23,379:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:21:29,156:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:29,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:29,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:29,158:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:29,159:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:29,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:29,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:29,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:29,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:29,166:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:29,166:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:29,167:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:29,167:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:29,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:29,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:29,169:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:29,169:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:29,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:29,179:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:29,179:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:29,462:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:29,462:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:29,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:29,565:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:29,624:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:29,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:29,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:29,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:29,626:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:29,627:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:29,627:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:29,628:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:29,628:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:29,632:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:29,633:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:29,633:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:29,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:29,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:29,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:29,635:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:29,636:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:29,641:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:29,642:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:29,642:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:29,644:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:21:29,969:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:29,969:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:30,244:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:30,244:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:30,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:30,360:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:30,495:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:21:30,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:30,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:30,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:30,497:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:30,497:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:30,499:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:30,499:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:30,500:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:30,584:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:30,585:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:30,585:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:30,585:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:30,586:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:30,671:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:30,671:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:30,672:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:30,675:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:21:40,390:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:40,391:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:40,391:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:40,392:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:40,392:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:40,394:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:40,395:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:40,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:40,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:40,399:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:40,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:40,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:40,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:40,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:40,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:40,403:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:40,403:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:40,404:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:40,409:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:40,409:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:40,660:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:40,660:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:40,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:40,771:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:40,832:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:40,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:40,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:40,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:40,834:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:40,834:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:40,835:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:40,836:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:40,837:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:40,841:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:40,842:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:40,842:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:40,842:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:40,842:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:40,843:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:40,843:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:40,844:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:40,849:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:40,850:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:40,850:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:40,853:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:21:41,170:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:41,170:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:41,440:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:41,440:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:41,529:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:41,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:41,668:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:21:41,669:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:41,670:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:41,670:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:41,671:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:41,672:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:41,673:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:41,674:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:41,674:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:41,757:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:41,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:41,759:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:41,759:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:41,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:41,841:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:41,842:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:41,842:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:41,846:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:21:43,074:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:43,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:43,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:43,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:43,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:43,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:43,078:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:43,078:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:43,079:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:43,082:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:43,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:43,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:43,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:43,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:43,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:43,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:43,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:43,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:43,091:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:43,091:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:43,344:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:43,345:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:43,442:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:43,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:43,515:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:43,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:43,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:43,518:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:43,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:43,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:43,521:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:43,521:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:43,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:43,525:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:43,526:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:43,526:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:43,527:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:43,527:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:43,528:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:43,528:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:43,529:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:43,535:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:43,535:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:43,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:43,538:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:21:43,893:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:43,893:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:44,169:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:44,170:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:44,260:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:44,271:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:44,441:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:21:44,442:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:44,443:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:44,443:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:44,443:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:44,444:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:44,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:44,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:44,446:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:44,546:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:44,548:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:44,548:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:44,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:44,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:44,654:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:44,654:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:44,655:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:44,658:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:21:46,114:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:46,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:46,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:46,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:46,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:46,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:46,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:46,117:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:46,117:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:46,122:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:46,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:46,123:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:46,123:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:46,124:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:46,124:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:46,125:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:46,125:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:46,125:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:46,130:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:46,130:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:46,394:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:46,394:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:46,501:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:46,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:46,571:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:46,573:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:46,573:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:46,574:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:46,574:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:46,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:46,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:46,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:46,577:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:46,582:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:46,583:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:46,583:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:46,583:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:46,583:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:46,584:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:46,585:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:46,585:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:46,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:46,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:46,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:46,595:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:21:46,896:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:46,896:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:47,180:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:47,180:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:47,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:47,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:47,424:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:21:47,425:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:47,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:47,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:47,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:47,427:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:47,428:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:47,428:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:47,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:47,517:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:47,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:47,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:47,520:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:47,520:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:47,601:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:47,602:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:47,602:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:47,606:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:21:49,106:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:49,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:49,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:49,109:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:49,110:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:49,110:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:49,111:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:49,111:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:49,112:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:49,115:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:49,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:49,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:21:49,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:49,117:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:49,118:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:49,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:49,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:49,120:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:49,126:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:49,126:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:49,383:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:49,383:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:49,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:49,524:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:49,590:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:21:49,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:49,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:49,593:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:49,594:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:49,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:49,596:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:49,596:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:49,597:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:49,601:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:49,601:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:49,602:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:49,602:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:49,602:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:49,603:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:49,604:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:49,604:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:49,610:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:49,610:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:49,610:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:49,613:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:21:49,930:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:49,930:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:50,200:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:50,201:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:21:50,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:21:50,334:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:21:50,499:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:21:50,500:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:21:50,500:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:21:50,501:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:21:50,501:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:21:50,502:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:21:50,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:21:50,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:21:50,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:21:50,586:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:21:50,588:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:21:50,588:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:21:50,588:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:21:50,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:21:50,667:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:21:50,668:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:21:50,668:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:21:50,672:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:22:21,167:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:21,167:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:21,167:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:21,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:21,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:21,169:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:21,169:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:21,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:21,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:21,173:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:21,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:21,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:21,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:21,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:21,175:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:21,175:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:21,177:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:21,177:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:21,182:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:21,182:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:21,438:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:21,439:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:21,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:21,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:21,591:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:21,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:21,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:21,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:21,593:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:21,594:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:21,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:21,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:21,597:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:21,602:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:21,605:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:21,605:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:21,606:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:21,607:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:21,607:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:21,608:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:21,609:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:21,617:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:21,617:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:21,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:21,622:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:22:21,946:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:21,946:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:22,268:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:22,268:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:22,369:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:22,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:22,535:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:22:22,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:22,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:22,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:22,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:22,538:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:22,539:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:22,539:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:22,540:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:22,618:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:22,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:22,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:22,620:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:22,620:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:22,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:22,698:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:22,698:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:22,702:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:22:24,119:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:24,120:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:24,120:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:24,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:24,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:24,123:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:24,124:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:24,125:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:24,125:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:24,129:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:24,129:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:24,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:24,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:24,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:24,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:24,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:24,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:24,132:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:24,137:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:24,137:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:24,394:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:24,394:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:24,497:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:24,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:24,568:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:24,569:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:24,569:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:24,569:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:24,570:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:24,571:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:24,572:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:24,572:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:24,573:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:24,576:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:24,577:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:24,577:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:24,578:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:24,578:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:24,579:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:24,580:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:24,580:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:24,586:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:24,586:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:24,587:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:24,589:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:22:24,880:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:24,880:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:25,160:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:25,160:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:25,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:25,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:25,418:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:22:25,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:25,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:25,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:25,422:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:25,423:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:25,425:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:25,425:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:25,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:25,520:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:25,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:25,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:25,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:25,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:25,607:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:25,607:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:25,608:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:25,611:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:22:42,729:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:42,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:42,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:42,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:42,732:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:42,733:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:42,734:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:42,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:42,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:42,739:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:42,740:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:42,740:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:42,740:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:42,741:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:42,741:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:42,742:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:42,742:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:42,742:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:42,748:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:42,748:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:43,017:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:43,018:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:43,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:43,151:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:43,189:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:43,191:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:43,191:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:43,191:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:43,192:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:43,193:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:43,193:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:43,194:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:43,194:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:43,200:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:43,201:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:43,202:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:43,202:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:43,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:43,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:43,204:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:43,205:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:43,213:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:43,213:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:43,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:43,216:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:22:43,591:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:43,591:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:43,866:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:43,867:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:43,964:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:43,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:44,135:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:22:44,136:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:44,136:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:44,137:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:44,137:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:44,138:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:44,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:44,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:44,140:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:44,227:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:44,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:44,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:44,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:44,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:44,309:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:44,310:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:44,310:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:44,314:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:22:52,743:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:52,744:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:52,745:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:52,745:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:52,746:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:52,747:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:52,748:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:52,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:52,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:52,755:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:52,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:52,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:52,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:52,757:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:52,757:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:52,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:52,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:52,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:52,764:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:52,764:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:53,038:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:53,038:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:53,133:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:53,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:53,214:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:53,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:53,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:53,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:53,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:53,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:53,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:53,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:53,218:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:53,224:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:53,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:53,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:53,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:53,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:53,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:53,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:53,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:53,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:53,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:53,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:53,237:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:22:53,525:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:53,526:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:53,810:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:53,810:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:53,892:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:53,905:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:54,041:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:22:54,042:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:54,042:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:54,042:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:54,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:54,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:54,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:54,045:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:54,045:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:54,120:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:54,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:54,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:54,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:54,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:54,197:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:54,198:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:54,198:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:54,201:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:22:59,503:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:59,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:59,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:59,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:59,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:59,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:59,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:59,506:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:59,506:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:59,509:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:59,510:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:59,510:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:22:59,510:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:59,511:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:59,511:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:59,512:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:59,513:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:59,513:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:59,519:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:59,519:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:59,790:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:59,790:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:22:59,876:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:22:59,895:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:22:59,963:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:22:59,966:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:22:59,968:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:22:59,968:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:22:59,969:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:22:59,970:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:59,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:59,972:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:22:59,973:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:59,980:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:22:59,983:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:22:59,986:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:22:59,986:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:22:59,987:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:22:59,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:22:59,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:22:59,990:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:22:59,996:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:22:59,996:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:22:59,997:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:22:59,999:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:23:00,336:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:00,336:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:00,617:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:00,618:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:00,698:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:00,716:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:00,858:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:23:00,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:00,860:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:00,860:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:00,861:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:00,861:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:00,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:00,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:00,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:00,941:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:00,943:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:00,943:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:00,943:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:00,944:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:01,023:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:01,023:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:01,024:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:01,027:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:23:40,214:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:40,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:40,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:40,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:40,218:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:40,218:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:40,219:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:40,219:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:40,220:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:40,224:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:40,224:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:40,225:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:40,225:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:40,225:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:40,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:40,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:40,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:40,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:40,232:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:40,232:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:40,504:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:40,505:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:40,582:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:40,599:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:40,647:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:40,648:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:40,648:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:40,648:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:40,649:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:40,649:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:40,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:40,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:40,651:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:40,656:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:40,657:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:40,657:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:40,658:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:40,658:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:40,659:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:40,660:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:40,660:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:40,665:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:40,666:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:40,666:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:40,668:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:23:40,989:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:40,989:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:41,267:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:41,267:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:41,361:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:41,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:41,492:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:23:41,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:41,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:41,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:41,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:41,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:41,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:41,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:41,497:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:41,578:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:41,580:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:41,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:41,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:41,582:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:41,676:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:41,676:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:41,677:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:41,680:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:23:44,326:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:44,328:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:44,328:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:44,329:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:44,330:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:44,330:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:44,331:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:44,332:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:44,332:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:44,336:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:44,337:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:44,337:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:44,338:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:44,338:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:44,339:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:44,339:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:44,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:44,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:44,346:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:44,346:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:44,607:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:44,607:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:44,701:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:44,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:44,783:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:44,784:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:44,785:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:44,786:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:44,786:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:44,787:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:44,788:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:44,788:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:44,789:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:44,795:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:44,796:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:44,796:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:44,797:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:44,797:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:44,797:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:44,798:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:44,799:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:44,806:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:44,807:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:44,808:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:44,810:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:23:45,105:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:45,105:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:45,390:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:45,391:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:45,479:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:45,502:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:45,650:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:23:45,651:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:45,652:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:45,652:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:45,653:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:45,653:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:45,654:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:45,654:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:45,655:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:45,728:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:45,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:45,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:45,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:45,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:45,826:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:45,827:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:45,827:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:45,831:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:23:47,969:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:47,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:47,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:47,972:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:47,973:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:47,973:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:47,974:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:47,974:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:47,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:47,979:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:47,979:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:47,979:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:47,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:47,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:47,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:47,981:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:47,981:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:47,982:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:47,988:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:47,988:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:48,268:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:48,269:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:48,363:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:48,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:48,452:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:48,452:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:48,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:48,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:48,454:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:48,454:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:48,455:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:48,455:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:48,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:48,459:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:48,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:48,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:48,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:48,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:48,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:48,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:48,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:48,470:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:48,471:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:48,471:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:48,473:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:23:48,817:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:48,817:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:49,096:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:49,096:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:49,180:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:49,201:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:49,339:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:23:49,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:49,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:49,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:49,341:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:49,342:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:49,342:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:49,343:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:49,343:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:49,424:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:49,425:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:49,425:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:49,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:49,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:49,512:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:49,512:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:49,513:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:49,516:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 10:23:53,104:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:53,105:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:53,105:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:53,106:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:53,106:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:53,107:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:53,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:53,109:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:53,110:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:53,113:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:53,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:53,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:53,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:53,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:53,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:53,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:53,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:53,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:53,122:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:53,123:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:53,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:53,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:53,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:53,532:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:53,585:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:53,586:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:53,587:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:53,587:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:53,588:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:53,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:53,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:53,590:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:53,590:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:53,595:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:53,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:53,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:53,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:53,596:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:53,596:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:53,598:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:53,599:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:53,605:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:53,606:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:53,606:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:53,608:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:23:55,862:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:55,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:55,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:55,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:55,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:55,865:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:55,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:55,867:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:55,868:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:55,872:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:55,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:55,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 10:23:55,874:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:55,874:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:55,875:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:55,876:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:55,876:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:55,876:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:55,883:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:55,883:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:56,156:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:56,158:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:56,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:56,283:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:56,342:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 10:23:56,345:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:56,345:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:56,346:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:56,346:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:56,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:56,349:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:56,349:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:56,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:56,354:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:56,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:56,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:56,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:56,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:56,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:56,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:56,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:56,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:56,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:56,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:56,367:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 10:23:56,689:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:56,689:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:56,966:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:56,966:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 10:23:57,064:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 10:23:57,113:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 10:23:57,226:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 10:23:57,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 10:23:57,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 10:23:57,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 10:23:57,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 10:23:57,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 10:23:57,230:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 10:23:57,230:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 10:23:57,231:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 10:23:57,314:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 10:23:57,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 10:23:57,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 10:23:57,316:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 10:23:57,316:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 10:23:57,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 10:23:57,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 10:23:57,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 10:23:57,425:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:06:48,850:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:48,850:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:49,124:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:49,266:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:06:49,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:06:49,389:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:06:49,440:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:49,442:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:49,442:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:06:49,443:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:49,443:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:49,444:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:49,444:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:49,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:49,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:49,449:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:49,450:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:06:49,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:06:49,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:06:49,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:06:49,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:49,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:49,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:49,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:06:49,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:06:49,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:06:49,463:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:06:49,754:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [11:06:49] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 11:06:49,899:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:49,899:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:50,181:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:50,181:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:06:50,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:06:50,289:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:06:50,426:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:06:50,427:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:50,427:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:06:50,428:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:50,428:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:50,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:50,430:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:50,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:50,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:50,513:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:50,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:06:50,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:06:50,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:06:50,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:06:50,594:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:06:50,594:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:06:50,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:06:50,598:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:06:52,848:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:52,850:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:52,851:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:06:52,851:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:52,852:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:52,853:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:52,853:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:52,855:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:52,855:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:52,859:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:52,860:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:52,860:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:06:52,860:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:52,860:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:52,861:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:52,861:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:52,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:52,862:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:52,868:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:52,868:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:53,154:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:53,155:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:06:53,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:06:53,296:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:06:53,363:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:53,363:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:53,364:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:06:53,364:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:53,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:53,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:53,366:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:53,366:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:53,367:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:53,372:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:53,372:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:06:53,373:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:06:53,373:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:06:53,373:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:06:53,374:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:53,375:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:53,375:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:53,382:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:06:53,382:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:06:53,382:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:06:53,384:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:06:53,769:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:53,769:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:54,060:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:54,061:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:06:54,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:06:54,196:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:06:54,329:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:06:54,330:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:54,330:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:06:54,330:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:54,331:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:54,331:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:54,332:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:54,333:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:54,333:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:54,428:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:54,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:06:54,430:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:06:54,430:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:06:54,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:06:54,558:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:06:54,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:06:54,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:06:54,563:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:06:55,760:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:55,760:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:55,761:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:06:55,761:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:55,761:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:55,762:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:55,762:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:55,762:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:55,763:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:55,767:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:55,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:55,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:06:55,768:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:55,768:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:55,769:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:55,771:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:55,771:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:55,772:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:55,778:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:55,778:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:56,046:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:56,047:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:06:56,143:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:06:56,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:06:56,220:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:56,221:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:56,222:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:06:56,222:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:56,223:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:56,223:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:56,224:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:56,225:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:56,225:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:56,228:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:56,230:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:06:56,230:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:06:56,231:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:06:56,231:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:06:56,231:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:56,232:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:56,232:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:56,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:06:56,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:06:56,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:06:56,242:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:06:56,648:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:56,648:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:56,914:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:56,914:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:06:57,009:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:06:57,031:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:06:57,184:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:06:57,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:57,186:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:06:57,187:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:57,188:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:57,188:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:57,190:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:57,190:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:57,191:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:57,269:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:57,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:06:57,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:06:57,271:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:06:57,271:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:06:57,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:06:57,359:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:06:57,359:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:06:57,362:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:06:58,149:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:58,150:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:58,151:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:06:58,151:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:58,152:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:58,153:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:58,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:58,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:58,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:58,158:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:58,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:58,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:06:58,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:58,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:58,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:58,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:58,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:58,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:58,168:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:58,168:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:58,451:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:58,451:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:06:58,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:06:58,558:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:06:58,628:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:06:58,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:58,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:06:58,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:58,632:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:58,633:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:58,633:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:58,633:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:58,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:58,638:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:58,639:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:06:58,639:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:06:58,639:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:06:58,640:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:06:58,640:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:58,641:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:58,641:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:58,648:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:06:58,649:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:06:58,649:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:06:58,651:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:06:59,051:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:59,051:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:59,340:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:59,340:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:06:59,416:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:06:59,430:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:06:59,588:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:06:59,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:06:59,590:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:06:59,590:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:06:59,590:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:06:59,591:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:06:59,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:06:59,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:06:59,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:06:59,668:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:06:59,669:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:06:59,669:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:06:59,670:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:06:59,670:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:06:59,748:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:06:59,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:06:59,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:06:59,752:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:07:19,042:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:19,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:19,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:19,045:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:19,045:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:19,046:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:19,047:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:19,047:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:19,048:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:19,052:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:19,052:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:19,053:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:19,053:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:19,054:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:19,054:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:19,055:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:19,055:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:19,056:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:19,063:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:19,063:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:19,358:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:19,358:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:19,447:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:19,482:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:19,534:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:19,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:19,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:19,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:19,538:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:19,538:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:19,539:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:19,540:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:19,540:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:19,544:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:19,545:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:19,545:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:19,545:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:19,546:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:19,546:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:19,547:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:19,547:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:19,554:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:19,554:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:19,554:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:19,557:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:07:19,922:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:19,922:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:20,213:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:20,213:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:20,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:20,344:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:20,458:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:07:20,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:20,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:20,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:20,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:20,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:20,464:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:20,464:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:20,465:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:20,570:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:20,572:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:20,572:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:20,573:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:20,573:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:20,678:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:20,678:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:20,679:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:20,682:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:07:22,956:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:22,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:22,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:22,959:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:22,960:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:22,961:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:22,961:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:22,962:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:22,962:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:22,966:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:22,966:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:22,967:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:22,967:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:22,967:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:22,968:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:22,969:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:22,969:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:22,970:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:22,977:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:22,978:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:23,258:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:23,258:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:23,361:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:23,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:23,458:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:23,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:23,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:23,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:23,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:23,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:23,464:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:23,465:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:23,465:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:23,471:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:23,472:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:23,472:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:23,472:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:23,472:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:23,473:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:23,474:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:23,474:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:23,480:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:23,481:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:23,481:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:23,483:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:07:23,921:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:23,922:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:24,195:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:24,195:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:24,288:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:24,314:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:24,429:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:07:24,430:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:24,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:24,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:24,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:24,432:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:24,433:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:24,433:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:24,434:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:24,517:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:24,518:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:24,518:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:24,518:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:24,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:24,606:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:24,606:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:24,607:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:24,610:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:07:30,399:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:30,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:30,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:30,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:30,404:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:30,405:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:30,405:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:30,406:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:30,407:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:30,410:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:30,411:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:30,411:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:30,411:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:30,412:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:30,412:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:30,413:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:30,413:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:30,413:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:30,418:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:30,418:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:30,695:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:30,695:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:30,781:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:30,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:30,855:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:30,856:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:30,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:30,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:30,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:30,858:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:30,858:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:30,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:30,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:30,863:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:30,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:30,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:30,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:30,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:30,865:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:30,865:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:30,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:30,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:30,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:30,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:30,875:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:07:31,207:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:31,207:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:31,491:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:31,491:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:31,593:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:31,604:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:31,751:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:07:31,752:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:31,752:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:31,752:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:31,753:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:31,754:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:31,755:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:31,755:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:31,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:31,844:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:31,846:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:31,846:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:31,846:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:31,847:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:31,926:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:31,926:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:31,927:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:31,930:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:07:41,791:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:41,792:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:41,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:41,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:41,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:41,794:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:41,795:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:41,795:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:41,795:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:41,799:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:41,799:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:41,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:41,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:41,800:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:41,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:41,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:41,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:41,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:41,808:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:41,809:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:42,082:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:42,082:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:42,179:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:42,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:42,262:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:42,263:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:42,264:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:42,265:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:42,266:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:42,266:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:42,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:42,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:42,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:42,274:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:42,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:42,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:42,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:42,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:42,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:42,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:42,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:42,283:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:42,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:42,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:42,286:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:07:42,663:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:42,663:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:42,943:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:42,943:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:43,036:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:43,050:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:43,213:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:07:43,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:43,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:43,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:43,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:43,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:43,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:43,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:43,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:43,311:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:43,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:43,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:43,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:43,314:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:43,407:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:43,408:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:43,408:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:43,412:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:07:44,695:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:44,696:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:44,696:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:44,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:44,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:44,698:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:44,699:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:44,699:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:44,700:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:44,703:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:44,704:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:44,704:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:44,705:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:44,705:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:44,706:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:44,706:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:44,706:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:44,707:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:44,713:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:44,713:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:44,989:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:44,989:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:45,107:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:45,126:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:45,184:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:45,186:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:45,186:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:45,187:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:45,187:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:45,188:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:45,189:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:45,189:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:45,190:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:45,198:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:45,200:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:45,200:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:45,200:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:45,201:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:45,202:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:45,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:45,205:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:45,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:45,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:45,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:45,218:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:07:45,531:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:45,531:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:45,828:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:45,829:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:45,937:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:45,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:46,061:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:07:46,062:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:46,063:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:46,063:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:46,064:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:46,064:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:46,066:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:46,066:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:46,067:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:46,147:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:46,148:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:46,148:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:46,149:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:46,149:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:46,238:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:46,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:46,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:46,243:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:07:47,716:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:47,718:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:47,718:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:47,719:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:47,720:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:47,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:47,722:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:47,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:47,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:47,727:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:47,727:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:47,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:47,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:47,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:47,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:47,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:47,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:47,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:47,734:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:47,735:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:48,008:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:48,008:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:48,104:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:48,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:48,170:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:48,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:48,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:48,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:48,173:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:48,173:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:48,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:48,174:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:48,175:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:48,179:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:48,180:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:48,180:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:48,180:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:48,180:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:48,181:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:48,182:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:48,182:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:48,189:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:48,189:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:48,190:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:48,192:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:07:48,578:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:48,578:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:48,875:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:48,876:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:48,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:48,983:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:49,092:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:07:49,092:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:49,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:49,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:49,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:49,095:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:49,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:49,097:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:49,097:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:49,197:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:49,198:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:49,199:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:49,199:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:49,200:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:49,291:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:49,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:49,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:49,296:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:07:50,789:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:50,790:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:50,790:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:50,790:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:50,791:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:50,791:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:50,792:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:50,792:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:50,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:50,795:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:50,796:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:50,796:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:07:50,796:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:50,797:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:50,797:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:50,798:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:50,798:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:50,799:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:50,804:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:50,804:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:51,086:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:51,086:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:51,182:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:51,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:51,274:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:07:51,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:51,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:51,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:51,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:51,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:51,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:51,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:51,279:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:51,284:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:51,285:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:51,285:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:51,285:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:51,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:51,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:51,287:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:51,288:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:51,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:51,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:51,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:51,296:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:07:51,689:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:51,690:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:51,974:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:51,974:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:07:52,053:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:07:52,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:07:52,211:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:07:52,212:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:07:52,213:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:07:52,213:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:07:52,213:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:07:52,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:07:52,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:07:52,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:07:52,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:07:52,291:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:07:52,292:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:07:52,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:07:52,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:07:52,293:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:07:52,378:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:07:52,378:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:07:52,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:07:52,382:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:08:22,728:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:22,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:22,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:08:22,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:22,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:22,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:22,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:22,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:22,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:22,735:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:22,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:22,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:08:22,736:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:22,736:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:22,737:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:22,737:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:22,738:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:22,738:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:22,744:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:22,744:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:23,002:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:23,003:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:08:23,104:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:08:23,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:08:23,168:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:23,169:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:23,169:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:08:23,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:23,170:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:23,171:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:23,171:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:23,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:23,172:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:23,176:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:23,177:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:08:23,177:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:08:23,177:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:08:23,178:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:08:23,178:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:23,179:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:23,179:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:23,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:08:23,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:08:23,185:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:08:23,187:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:08:23,559:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:23,559:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:23,837:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:23,837:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:08:23,932:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:08:23,948:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:08:24,078:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:08:24,079:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:24,080:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:08:24,080:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:24,081:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:24,081:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:24,082:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:24,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:24,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:24,164:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:24,166:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:08:24,166:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:08:24,166:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:08:24,166:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:08:24,257:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:08:24,258:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:08:24,258:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:08:24,261:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:08:25,678:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:25,680:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:25,680:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:08:25,681:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:25,681:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:25,682:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:25,683:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:25,683:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:25,684:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:25,687:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:25,688:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:25,688:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:08:25,688:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:25,688:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:25,689:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:25,689:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:25,690:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:25,690:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:25,697:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:25,697:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:25,952:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:25,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:08:26,046:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:08:26,070:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:08:26,130:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:26,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:26,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:08:26,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:26,132:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:26,132:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:26,133:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:26,134:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:26,134:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:26,138:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:26,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:08:26,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:08:26,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:08:26,140:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:08:26,140:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:26,141:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:26,141:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:26,147:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:08:26,147:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:08:26,147:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:08:26,149:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:08:26,586:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:26,586:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:26,863:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:26,863:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:08:26,953:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:08:26,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:08:27,112:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:08:27,113:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:27,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:08:27,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:27,114:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:27,115:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:27,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:27,116:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:27,117:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:27,200:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:27,201:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:08:27,202:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:08:27,202:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:08:27,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:08:27,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:08:27,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:08:27,287:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:08:27,290:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:08:43,966:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:43,968:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:43,968:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:08:43,968:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:43,969:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:43,969:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:43,970:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:43,970:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:43,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:43,974:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:43,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:43,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:08:43,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:43,976:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:43,976:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:43,977:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:43,978:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:43,978:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:43,983:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:43,983:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:44,245:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:44,245:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:08:44,337:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:08:44,367:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:08:44,420:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:44,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:44,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:08:44,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:44,422:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:44,422:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:44,423:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:44,423:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:44,424:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:44,428:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:44,428:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:08:44,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:08:44,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:08:44,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:08:44,430:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:44,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:44,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:44,437:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:08:44,437:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:08:44,438:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:08:44,440:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:08:44,820:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:44,820:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:45,092:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:45,092:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:08:45,189:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:08:45,213:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:08:45,335:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:08:45,337:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:45,337:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:08:45,337:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:45,338:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:45,338:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:45,339:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:45,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:45,341:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:45,443:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:45,444:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:08:45,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:08:45,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:08:45,446:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:08:45,556:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:08:45,557:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:08:45,557:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:08:45,561:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:08:53,997:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:53,998:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:53,999:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:08:53,999:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:54,000:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:54,001:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:54,001:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:54,002:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:54,002:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:54,005:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:54,006:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:54,006:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:08:54,006:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:54,007:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:54,008:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:54,009:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:54,010:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:54,011:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:54,019:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:54,019:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:54,303:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:54,303:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:08:54,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:08:54,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:08:54,474:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:08:54,475:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:54,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:08:54,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:54,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:54,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:54,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:54,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:54,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:54,482:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:54,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:08:54,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:08:54,484:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:08:54,484:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:08:54,484:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:54,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:54,486:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:54,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:08:54,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:08:54,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:08:54,494:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:08:54,848:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:54,848:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:55,117:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:55,117:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:08:55,206:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:08:55,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:08:55,368:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:08:55,369:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:08:55,369:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:08:55,369:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:08:55,370:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:08:55,371:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:08:55,371:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:08:55,372:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:08:55,372:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:08:55,460:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:08:55,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:08:55,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:08:55,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:08:55,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:08:55,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:08:55,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:08:55,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:08:55,579:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:09:00,813:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:00,815:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:00,815:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:00,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:00,816:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:00,817:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:00,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:00,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:00,819:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:00,824:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:00,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:00,825:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:00,826:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:00,826:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:00,827:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:00,828:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:00,828:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:00,829:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:00,837:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:00,837:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:01,114:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:01,115:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:01,206:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:01,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:01,288:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:01,288:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:01,289:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:01,289:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:01,289:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:01,290:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:01,290:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:01,291:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:01,291:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:01,295:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:01,296:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:01,296:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:01,296:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:01,297:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:01,297:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:01,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:01,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:01,305:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:01,305:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:01,306:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:01,308:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:09:01,677:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:01,677:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:01,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:01,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:02,047:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:02,060:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:02,163:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:09:02,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:02,164:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:02,165:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:02,166:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:02,166:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:02,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:02,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:02,169:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:02,273:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:02,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:02,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:02,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:02,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:02,370:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:02,370:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:02,371:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:02,374:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:09:41,986:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:41,987:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:41,987:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:41,987:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:41,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:41,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:41,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:41,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:41,990:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:41,994:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:41,995:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:41,995:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:41,996:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:41,996:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:41,998:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:41,998:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:41,999:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:41,999:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:42,006:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:42,006:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:42,289:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:42,289:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:42,384:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:42,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:42,435:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:42,437:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:42,437:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:42,437:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:42,438:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:42,438:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:42,439:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:42,440:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:42,440:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:42,444:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:42,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:42,445:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:42,446:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:42,446:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:42,446:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:42,447:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:42,447:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:42,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:42,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:42,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:42,456:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:09:42,836:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:42,837:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:43,111:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:43,111:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:43,211:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:43,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:43,321:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:09:43,322:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:43,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:43,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:43,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:43,324:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:43,325:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:43,325:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:43,326:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:43,402:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:43,403:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:43,404:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:43,404:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:43,404:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:43,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:43,483:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:43,484:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:43,487:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:09:46,124:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:46,126:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:46,126:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:46,127:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:46,128:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:46,128:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:46,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:46,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:46,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:46,134:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:46,135:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:46,135:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:46,135:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:46,136:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:46,136:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:46,137:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:46,138:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:46,138:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:46,147:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:46,147:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:46,423:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:46,423:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:46,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:46,548:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:46,610:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:46,611:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:46,611:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:46,612:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:46,612:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:46,613:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:46,613:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:46,614:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:46,614:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:46,619:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:46,620:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:46,620:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:46,621:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:46,621:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:46,622:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:46,622:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:46,623:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:46,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:46,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:46,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:46,633:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:09:47,037:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:47,038:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:47,309:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:47,310:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:47,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:47,416:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:47,548:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:09:47,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:47,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:47,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:47,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:47,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:47,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:47,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:47,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:47,645:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:47,646:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:47,646:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:47,647:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:47,647:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:47,763:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:47,764:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:47,764:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:47,767:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:09:49,950:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:49,952:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:49,953:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:49,953:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:49,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:49,954:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:49,955:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:49,956:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:49,957:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:49,960:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:49,962:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:49,962:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:49,962:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:49,963:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:49,963:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:49,963:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:49,964:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:49,964:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:49,971:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:49,971:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:50,227:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:50,227:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:50,313:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:50,343:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:50,389:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:50,390:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:50,391:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:50,391:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:50,392:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:50,392:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:50,393:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:50,393:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:50,394:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:50,399:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:50,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:50,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:50,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:50,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:50,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:50,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:50,403:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:50,409:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:50,410:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:50,410:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:50,412:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:09:50,749:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:50,749:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:51,038:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:51,039:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:51,134:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:51,152:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:51,274:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:09:51,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:51,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:51,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:51,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:51,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:51,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:51,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:51,279:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:51,355:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:51,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:51,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:51,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:51,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:51,434:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:51,434:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:51,435:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:51,438:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:09:54,898:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:54,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:54,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:54,903:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:54,904:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:54,905:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:54,906:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:54,906:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:54,907:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:54,912:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:54,913:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:54,913:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:54,913:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:54,914:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:54,914:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:54,915:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:54,915:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:54,915:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:54,922:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:54,922:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:55,203:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:55,204:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:55,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:55,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:55,385:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:55,386:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:55,387:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:55,387:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:55,388:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:55,388:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:55,389:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:55,389:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:55,390:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:55,395:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:55,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:55,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:55,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:55,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:55,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:55,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:55,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:55,408:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:55,408:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:55,409:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:55,412:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:09:57,745:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:57,747:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:57,747:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:57,747:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:57,748:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:57,749:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:57,750:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:57,751:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:57,751:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:57,755:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:57,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:57,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:09:57,756:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:57,757:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:57,757:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:57,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:57,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:57,758:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:57,766:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:57,766:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:58,030:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:58,030:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:58,123:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:58,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:58,225:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:09:58,226:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:58,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:58,227:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:58,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:58,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:58,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:58,229:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:58,230:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:58,233:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:58,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:58,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:58,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:58,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:58,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:58,236:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:58,237:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:58,243:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:58,243:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:58,243:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:58,245:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:09:58,683:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:58,683:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:58,957:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:58,957:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:09:59,040:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:09:59,082:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:09:59,204:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:09:59,205:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:09:59,206:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:09:59,206:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:09:59,207:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:09:59,208:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:09:59,209:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:09:59,209:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:09:59,210:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:09:59,300:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:09:59,301:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:09:59,302:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:09:59,302:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:09:59,303:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:09:59,388:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:09:59,388:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:09:59,389:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:09:59,392:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:18:03,947:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:03,948:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:04,234:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:04,350:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:04,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:04,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:04,557:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:04,562:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:04,564:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:04,565:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:04,568:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:04,570:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:04,574:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:04,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:04,578:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:04,600:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:04,606:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:04,608:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:04,609:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:04,611:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:04,613:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:04,614:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:04,616:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:04,635:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:04,635:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:04,636:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:04,639:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:18:05,093:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\xgboost\core.py:158: UserWarning: [11:18:05] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0c55ff5f71b100e98-1\xgboost\xgboost-ci-windows\src\data\../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

2025-01-22 11:18:05,253:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:05,253:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:05,551:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:05,551:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:05,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:05,718:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:05,865:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:18:05,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:05,867:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:05,867:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:05,868:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:05,868:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:05,869:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:05,870:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:05,870:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:05,963:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:05,964:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:05,965:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:05,965:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:05,965:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:06,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:06,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:06,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:06,048:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:18:08,710:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:08,712:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:08,713:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:08,714:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:08,715:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:08,716:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:08,717:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:08,718:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:08,719:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:08,727:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:08,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:08,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:08,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:08,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:08,729:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:08,730:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:08,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:08,731:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:08,737:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:08,737:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:09,002:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:09,002:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:09,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:09,180:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:09,238:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:09,243:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:09,246:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:09,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:09,251:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:09,253:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:09,257:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:09,259:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:09,261:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:09,281:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:09,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:09,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:09,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:09,285:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:09,286:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:09,288:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:09,289:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:09,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:09,299:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:09,299:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:09,301:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:18:09,811:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:09,811:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:10,077:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:10,078:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:10,176:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:10,197:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:10,393:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:18:10,394:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:10,394:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:10,395:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:10,395:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:10,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:10,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:10,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:10,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:10,494:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:10,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:10,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:10,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:10,496:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:10,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:10,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:10,582:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:10,585:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:18:12,237:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:12,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:12,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:12,246:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:12,249:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:12,251:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:12,253:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:12,254:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:12,255:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:12,266:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:12,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:12,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:12,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:12,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:12,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:12,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:12,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:12,271:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:12,278:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:12,278:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:12,537:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:12,538:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:12,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:12,714:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:12,781:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:12,786:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:12,788:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:12,790:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:12,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:12,796:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:12,799:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:12,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:12,803:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:12,820:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:12,823:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:12,824:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:12,824:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:12,826:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:12,827:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:12,829:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:12,830:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:12,840:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:12,840:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:12,840:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:12,842:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:18:13,413:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:13,413:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:13,700:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:13,701:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:13,869:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:13,883:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:14,031:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:18:14,032:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:14,033:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:14,033:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:14,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:14,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:14,035:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:14,036:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:14,036:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:14,160:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:14,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:14,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:14,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:14,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:14,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:14,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:14,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:14,273:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:18:15,255:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:15,259:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:15,261:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:15,263:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:15,266:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:15,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:15,272:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:15,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:15,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:15,294:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:15,297:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:15,298:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:15,300:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:15,302:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:15,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:15,307:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:15,309:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:15,310:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:15,323:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:15,324:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:15,646:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:15,646:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:15,795:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:15,824:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:15,896:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:15,898:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:15,899:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:15,899:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:15,900:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:15,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:15,902:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:15,903:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:15,905:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:15,918:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:15,921:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:15,921:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:15,922:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:15,923:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:15,924:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:15,926:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:15,927:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:15,937:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:15,937:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:15,938:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:15,941:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:18:16,474:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:16,475:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:16,770:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:16,770:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:16,934:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:16,973:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:17,155:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:18:17,156:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:17,156:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:17,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:17,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:17,158:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:17,159:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:17,159:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:17,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:17,233:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:17,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:17,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:17,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:17,236:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:17,308:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:17,309:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:17,309:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:17,312:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:18:40,578:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:40,579:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:40,580:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:40,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:40,583:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:40,583:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:40,586:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:40,587:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:40,588:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:40,599:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:40,600:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:40,601:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:40,602:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:40,602:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:40,603:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:40,604:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:40,605:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:40,605:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:40,613:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:40,613:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:40,912:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:40,912:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:41,015:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:41,062:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:41,125:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:41,128:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:41,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:41,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:41,133:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:41,136:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:41,137:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:41,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:41,141:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:41,155:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:41,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:41,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:41,158:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:41,159:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:41,160:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:41,161:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:41,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:41,177:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:41,179:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:41,180:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:41,192:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:18:41,786:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:41,786:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:42,060:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:42,060:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:42,207:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:42,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:42,377:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:18:42,378:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:42,378:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:42,378:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:42,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:42,380:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:42,381:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:42,381:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:42,382:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:42,487:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:42,489:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:42,489:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:42,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:42,491:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:42,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:42,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:42,596:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:42,599:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:18:45,507:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:45,512:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:45,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:45,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:45,519:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:45,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:45,527:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:45,531:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:45,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:45,547:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:45,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:45,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:45,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:45,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:45,556:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:45,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:45,561:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:45,563:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:45,593:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:45,593:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:45,951:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:45,951:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:46,097:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:46,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:46,207:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:46,211:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:46,212:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:46,213:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:46,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:46,217:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:46,221:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:46,224:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:46,228:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:46,244:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:46,246:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:46,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:46,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:46,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:46,249:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:46,250:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:46,251:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:46,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:46,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:46,271:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:46,283:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:18:46,883:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:46,883:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:47,150:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:47,150:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:47,299:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:47,339:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:47,483:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:18:47,484:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:47,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:47,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:47,486:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:47,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:47,488:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:47,489:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:47,490:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:47,614:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:47,615:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:47,615:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:47,616:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:47,616:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:47,709:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:47,710:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:47,710:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:47,714:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:18:55,067:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:55,071:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:55,073:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:55,075:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:55,078:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:55,081:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:55,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:55,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:55,087:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:55,099:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:55,101:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:55,101:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:18:55,102:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:55,103:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:55,105:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:55,106:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:55,107:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:55,107:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:55,116:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:55,116:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:55,365:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:55,366:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:55,518:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:55,546:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:55,614:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:18:55,615:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:55,616:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:55,616:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:55,617:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:55,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:55,624:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:55,626:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:55,628:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:55,645:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:55,647:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:55,648:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:55,648:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:55,649:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:55,649:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:55,651:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:55,652:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:55,661:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:55,662:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:55,663:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:55,664:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:18:56,238:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:56,238:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:56,510:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:56,510:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:18:56,626:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:18:56,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:18:56,846:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:18:56,847:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:18:56,847:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:18:56,847:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:18:56,848:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:18:56,848:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:18:56,849:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:18:56,850:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:18:56,850:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:18:56,932:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:18:56,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:18:56,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:18:56,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:18:56,934:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:18:57,013:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:18:57,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:18:57,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:18:57,017:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:19:08,915:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:08,917:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:08,918:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:08,918:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:08,920:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:08,921:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:08,923:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:08,924:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:08,926:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:08,932:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:08,932:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:08,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:08,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:08,935:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:08,935:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:08,936:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:08,936:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:08,937:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:08,944:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:08,944:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:09,230:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:09,230:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:09,361:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:09,382:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:09,455:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:09,459:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:09,460:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:09,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:09,464:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:09,467:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:09,471:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:09,473:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:09,475:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:09,489:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:09,491:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:09,491:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:09,492:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:09,492:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:09,493:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:09,494:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:09,495:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:09,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:09,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:09,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:09,506:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:19:09,932:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:09,932:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:10,233:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:10,233:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:10,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:10,371:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:10,535:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:19:10,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:10,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:10,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:10,537:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:10,538:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:10,539:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:10,539:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:10,540:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:10,623:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:10,624:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:10,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:10,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:10,625:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:10,714:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:10,714:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:10,715:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:10,718:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:19:12,315:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:12,319:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:12,321:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:12,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:12,325:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:12,326:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:12,327:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:12,327:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:12,328:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:12,340:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:12,343:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:12,344:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:12,344:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:12,345:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:12,346:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:12,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:12,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:12,348:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:12,356:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:12,356:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:12,636:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:12,636:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:12,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:12,785:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:12,828:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:12,829:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:12,829:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:12,830:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:12,830:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:12,832:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:12,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:12,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:12,834:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:12,846:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:12,847:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:12,848:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:12,848:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:12,849:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:12,849:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:12,850:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:12,851:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:12,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:12,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:12,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:12,862:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:19:13,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:13,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:13,692:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:13,692:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:13,878:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:13,893:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:14,118:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:19:14,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:14,120:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:14,120:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:14,120:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:14,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:14,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:14,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:14,123:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:14,213:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:14,214:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:14,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:14,215:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:14,216:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:14,346:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:14,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:14,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:14,350:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:19:16,117:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:16,118:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:16,118:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:16,118:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:16,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:16,119:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:16,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:16,121:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:16,122:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:16,126:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:16,127:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:16,128:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:16,128:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:16,128:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:16,129:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:16,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:16,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:16,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:16,136:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:16,136:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:16,444:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:16,445:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:16,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:16,614:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:16,692:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:16,697:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:16,699:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:16,700:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:16,701:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:16,703:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:16,706:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:16,708:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:16,709:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:16,721:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:16,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:16,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:16,724:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:16,725:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:16,725:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:16,727:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:16,728:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:16,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:16,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:16,735:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:16,737:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:19:17,275:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:17,275:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:17,538:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:17,538:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:17,663:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:17,673:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:17,862:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:19:17,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:17,863:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:17,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:17,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:17,865:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:17,865:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:17,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:17,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:17,943:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:17,944:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:17,944:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:17,944:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:17,945:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:18,026:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:18,026:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:18,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:18,030:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:19:19,626:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:19,627:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:19,627:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:19,628:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:19,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:19,629:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:19,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:19,632:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:19,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:19,644:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:19,645:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:19,646:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:19,646:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:19,647:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:19,648:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:19,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:19,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:19,652:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:19,662:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:19,662:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:20,061:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:20,061:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:20,201:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:20,246:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:20,310:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:20,315:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:20,317:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:20,319:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:20,322:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:20,326:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:20,329:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:20,331:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:20,333:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:20,353:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:20,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:20,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:20,359:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:20,361:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:20,363:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:20,366:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:20,367:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:20,378:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:20,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:20,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:20,382:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:19:20,930:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:20,930:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:21,294:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:21,294:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:21,430:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:21,450:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:21,632:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:19:21,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:21,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:21,635:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:21,635:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:21,636:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:21,637:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:21,637:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:21,638:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:21,719:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:21,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:21,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:21,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:21,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:21,809:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:21,809:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:21,810:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:21,813:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:19:58,854:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:58,858:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:58,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:58,861:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:58,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:58,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:58,869:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:58,870:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:58,872:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:58,882:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:58,883:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:58,884:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:19:58,884:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:58,884:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:58,885:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:58,885:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:58,886:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:58,886:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:58,894:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:58,894:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:59,272:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:59,272:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:19:59,387:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:19:59,405:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:19:59,470:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:19:59,473:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:19:59,474:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:19:59,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:19:59,478:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:19:59,480:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:59,485:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:59,487:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:19:59,488:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:59,502:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:59,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:19:59,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:19:59,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:19:59,506:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:19:59,507:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:19:59,508:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:19:59,509:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:19:59,520:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:19:59,520:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:19:59,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:19:59,525:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:19:59,965:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:19:59,965:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:00,287:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:00,287:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:00,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:00,432:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:00,586:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:20:00,587:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:00,588:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:00,588:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:00,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:00,589:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:00,591:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:00,591:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:00,592:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:00,677:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:00,678:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:00,679:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:00,679:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:00,680:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:00,783:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:00,783:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:00,784:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:00,787:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:20:02,456:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:02,461:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:02,462:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:20:02,464:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:02,467:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:02,469:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:02,473:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:02,475:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:02,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:02,494:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:02,497:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:02,498:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:20:02,499:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:02,500:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:02,501:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:02,503:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:02,504:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:02,505:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:02,515:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:02,515:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:02,824:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:02,825:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:02,951:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:02,988:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:03,088:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:03,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:03,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:03,098:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:03,101:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:03,104:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:03,107:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:03,109:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:03,111:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:03,129:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:03,132:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:03,133:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:03,133:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:03,134:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:03,136:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:03,137:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:03,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:03,148:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:03,149:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:03,149:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:03,151:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:20:03,623:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:03,623:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:03,994:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:03,994:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:04,117:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:04,140:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:04,302:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:20:04,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:04,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:04,304:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:04,305:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:04,305:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:04,306:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:04,307:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:04,308:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:04,395:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:04,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:04,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:04,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:04,397:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:04,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:04,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:04,477:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:04,481:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:20:26,873:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:26,874:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:26,874:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:20:26,875:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:26,875:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:26,876:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:26,877:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:26,877:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:26,878:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:26,884:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:26,885:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:26,886:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:20:26,886:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:26,888:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:26,888:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:26,890:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:26,891:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:26,892:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:26,901:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:26,901:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:27,169:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:27,170:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:27,305:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:27,335:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:27,412:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:27,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:27,419:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:27,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:27,423:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:27,426:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:27,429:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:27,431:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:27,433:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:27,448:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:27,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:27,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:27,452:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:27,453:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:27,454:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:27,455:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:27,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:27,464:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:27,465:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:27,465:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:27,467:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:20:27,953:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:27,954:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:28,294:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:28,295:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:28,438:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:28,463:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:28,629:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:20:28,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:28,630:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:28,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:28,631:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:28,632:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:28,633:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:28,633:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:28,634:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:28,708:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:28,709:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:28,709:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:28,709:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:28,710:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:28,783:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:28,784:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:28,784:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:28,787:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:20:39,337:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:39,338:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:39,339:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:20:39,339:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:39,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:39,341:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:39,342:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:39,343:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:39,344:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:39,349:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:39,351:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:39,352:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:20:39,354:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:39,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:39,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:39,362:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:39,363:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:39,365:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:39,379:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:39,379:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:39,687:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:39,687:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:39,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:39,870:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:39,959:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:39,964:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:39,966:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:39,968:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:39,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:39,974:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:39,979:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:39,980:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:39,983:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:40,001:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:40,006:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:40,007:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:40,008:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:40,010:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:40,013:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:40,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:40,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:40,041:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:40,043:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:40,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:40,048:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:20:40,609:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:40,610:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:40,912:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:40,912:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:41,051:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:41,067:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:41,240:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:20:41,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:41,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:41,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:41,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:41,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:41,243:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:41,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:41,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:41,320:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:41,321:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:41,322:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:41,322:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:41,323:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:41,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:41,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:41,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:41,405:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:20:48,004:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:48,009:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:48,011:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:20:48,013:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:48,016:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:48,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:48,024:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:48,025:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:48,027:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:48,039:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:48,041:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:48,042:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:20:48,042:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:48,044:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:48,045:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:48,046:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:48,047:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:48,048:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:48,057:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:48,057:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:48,327:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:48,327:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:48,475:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:48,531:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:48,591:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:20:48,594:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:48,596:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:48,597:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:48,599:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:48,601:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:48,607:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:48,610:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:48,613:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:48,633:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:48,636:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:48,637:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:48,637:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:48,638:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:48,639:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:48,640:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:48,641:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:48,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:48,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:48,650:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:48,653:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:20:49,156:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:49,156:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:49,438:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:49,438:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:20:49,595:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:20:49,619:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:20:49,764:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:20:49,765:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:20:49,765:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:20:49,765:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:20:49,766:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:20:49,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:20:49,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:20:49,768:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:20:49,768:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:20:49,851:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:20:49,852:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:20:49,852:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:20:49,854:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:20:49,854:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:20:49,946:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:20:49,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:20:49,947:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:20:49,950:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:21:40,084:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:40,089:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:40,091:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:21:40,092:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:40,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:40,099:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:40,102:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:40,105:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:40,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:40,127:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:40,130:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:40,131:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:21:40,132:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:40,134:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:40,136:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:40,138:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:40,139:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:40,140:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:40,152:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:40,152:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:40,471:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:40,472:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:21:40,576:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:21:40,593:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:21:40,643:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:40,644:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:40,644:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:21:40,645:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:40,645:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:40,646:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:40,647:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:40,648:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:40,649:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:40,655:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:40,656:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:21:40,657:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:21:40,657:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:21:40,658:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:21:40,658:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:40,659:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:40,660:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:40,665:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:21:40,666:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:21:40,666:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:21:40,668:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:21:41,110:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:41,110:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:41,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:41,392:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:21:41,498:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:21:41,502:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:21:41,691:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:21:41,692:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:41,693:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:21:41,693:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:41,694:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:41,694:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:41,695:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:41,696:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:41,696:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:41,855:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:41,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:21:41,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:21:41,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:21:41,858:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:21:42,004:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:21:42,005:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:21:42,005:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:21:42,009:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:21:45,403:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:45,405:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:45,405:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:21:45,406:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:45,407:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:45,408:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:45,409:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:45,409:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:45,410:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:45,416:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:45,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:45,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:21:45,417:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:45,418:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:45,419:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:45,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:45,420:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:45,421:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:45,430:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:45,430:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:45,697:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:45,698:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:21:45,782:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:21:45,831:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:21:45,895:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:45,898:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:45,900:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:21:45,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:45,904:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:45,906:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:45,910:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:45,910:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:45,911:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:45,923:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:45,925:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:21:45,926:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:21:45,927:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:21:45,928:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:21:45,929:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:45,931:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:45,932:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:45,940:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:21:45,940:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:21:45,940:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:21:45,942:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:21:46,489:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:46,489:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:46,759:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:46,760:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:21:46,998:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:21:47,051:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:21:47,232:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:21:47,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:47,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:21:47,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:47,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:47,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:47,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:47,236:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:47,236:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:47,310:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:47,311:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:21:47,311:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:21:47,312:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:21:47,312:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:21:47,392:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:21:47,393:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:21:47,393:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:21:47,397:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:21:50,266:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:50,267:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:50,268:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:21:50,269:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:50,270:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:50,272:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:50,273:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:50,274:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:50,275:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:50,282:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:50,283:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:50,283:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:21:50,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:50,284:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:50,285:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:50,288:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:50,289:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:50,290:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:50,301:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:50,301:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:50,669:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:50,670:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:21:50,799:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:21:50,831:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:21:50,888:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:50,893:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:50,894:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:21:50,895:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:50,899:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:50,901:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:50,905:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:50,906:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:50,908:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:50,921:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:50,922:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:21:50,922:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:21:50,923:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:21:50,923:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:21:50,924:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:50,925:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:50,925:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:50,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:21:50,933:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:21:50,934:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:21:50,936:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:21:51,493:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:51,493:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:51,931:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:51,932:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:21:52,091:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:21:52,108:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:21:52,256:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:21:52,258:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:52,259:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:21:52,259:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:52,260:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:52,261:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:52,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:52,263:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:52,263:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:52,397:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:52,398:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:21:52,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:21:52,399:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:21:52,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:21:52,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:21:52,535:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:21:52,535:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:21:52,539:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-22 11:21:57,535:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:57,538:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:57,539:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:21:57,540:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:57,542:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:57,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:57,545:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:57,547:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:57,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:57,553:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:57,555:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:57,555:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:21:57,556:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:57,556:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:57,557:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:57,558:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:57,560:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:57,560:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:57,571:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:57,571:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:57,992:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:57,993:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:21:58,096:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:21:58,163:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:21:58,261:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:21:58,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:21:58,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:21:58,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:21:58,263:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:21:58,263:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:58,264:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:58,264:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:21:58,265:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:58,274:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:21:58,276:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:21:58,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:21:58,277:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:21:58,278:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:21:58,279:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:21:58,281:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:21:58,282:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:21:58,294:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:21:58,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:21:58,295:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:21:58,298:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:22:01,327:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:22:01,330:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:22:01,330:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:22:01,331:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:22:01,331:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:22:01,332:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:22:01,333:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:22:01,334:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:22:01,336:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:22:01,349:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:22:01,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:22:01,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-22 11:22:01,351:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:22:01,351:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:22:01,352:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:22:01,353:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:22:01,354:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:22:01,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:22:01,364:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:22:01,364:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:22:01,714:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:22:01,715:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:22:01,847:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:22:01,897:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:22:01,992:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-22 11:22:01,997:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:22:01,999:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:22:02,000:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:22:02,002:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:22:02,006:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:22:02,011:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:22:02,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:22:02,018:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:22:02,033:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:22:02,033:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:22:02,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:22:02,034:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:22:02,035:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:22:02,036:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:22:02,037:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:22:02,039:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:22:02,046:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:22:02,046:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:22:02,047:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:22:02,048:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-22 11:22:02,611:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:22:02,612:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:22:02,879:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:22:02,880:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-22 11:22:03,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-22 11:22:03,064:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-22 11:22:03,260:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = np.abs(differences)

2025-01-22 11:22:03,261:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-22 11:22:03,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-22 11:22:03,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-22 11:22:03,262:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-22 11:22:03,263:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-22 11:22:03,264:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-22 11:22:03,265:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-22 11:22:03,265:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-22 11:22:03,338:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-22 11:22:03,339:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-22 11:22:03,339:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-22 11:22:03,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-22 11:22:03,340:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-22 11:22:03,414:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-22 11:22:03,414:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-22 11:22:03,416:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-22 11:22:03,419:WARNING:C:\Users\pc021\dx_project\HealthModelPipeline\dataflow\src\models_healthchecker\current_system_health.py:32: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()

2025-01-23 15:47:35,656:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:35,656:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:36,048:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:36,322:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:47:36,422:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:47:36,452:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:47:36,527:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:36,531:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:36,531:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:47:36,532:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:36,532:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:36,533:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:36,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:36,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:36,535:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:36,540:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:36,543:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:47:36,543:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:47:36,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:47:36,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:47:36,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:36,545:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:36,546:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:36,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:47:36,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:47:36,553:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:47:36,557:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:47:37,085:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:37,086:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:37,086:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:37,086:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:37,087:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:37,087:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:37,088:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:37,088:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:37,089:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:37,092:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:37,093:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:37,093:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:37,093:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:37,093:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:37,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:37,094:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:37,095:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:37,095:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:37,101:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:37,101:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:37,357:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:37,358:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:47:37,455:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:47:37,476:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:47:37,532:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:37,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:37,534:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:47:37,535:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:37,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:37,536:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:37,538:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:37,538:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:37,538:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:37,542:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:37,543:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:47:37,543:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:47:37,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:47:37,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:47:37,544:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:37,545:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:37,546:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:37,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:47:37,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:47:37,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:47:37,554:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:47:38,548:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:38,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:38,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:38,549:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:38,550:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:38,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:38,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:38,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:38,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:38,556:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:38,557:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:38,557:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:38,557:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:38,557:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:38,558:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:38,558:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:38,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:38,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:38,564:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:38,564:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:38,831:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:38,831:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:47:38,920:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:47:38,936:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:47:39,006:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:39,009:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:39,010:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:47:39,010:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:39,011:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:39,012:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:39,013:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:39,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:39,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:39,018:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:39,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:47:39,019:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:47:39,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:47:39,020:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:47:39,021:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:39,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:39,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:39,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:47:39,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:47:39,028:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:47:39,030:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:47:39,510:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:39,512:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:39,513:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:39,513:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:39,514:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:39,515:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:39,516:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:39,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:39,517:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:39,521:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:39,521:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:39,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:39,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:39,522:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:39,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:39,523:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:39,524:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:39,524:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:39,529:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:39,529:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:39,797:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:39,797:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:47:39,888:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:47:39,904:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:47:39,969:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:39,971:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:39,972:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:47:39,973:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:39,974:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:39,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:39,975:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:39,976:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:39,976:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:39,980:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:39,981:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:47:39,981:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:47:39,981:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:47:39,982:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:47:39,982:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:39,983:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:39,983:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:39,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:47:39,989:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:47:39,990:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:47:39,992:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:47:58,234:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:58,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:58,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:58,236:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:58,236:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:58,237:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:58,238:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:58,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:58,239:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:58,243:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:58,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:58,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:58,244:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:58,246:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:58,246:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:58,247:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:58,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:58,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:58,258:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:58,258:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:58,523:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:58,523:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:47:58,656:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:47:58,741:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:47:58,792:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:58,797:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:58,798:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:47:58,799:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:58,801:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:58,804:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:58,808:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:58,809:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:58,811:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:58,829:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:58,832:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:47:58,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:47:58,833:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:47:58,834:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:47:58,835:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:58,837:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:58,838:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:58,853:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:47:58,854:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:47:58,856:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:47:58,864:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:47:59,551:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:59,551:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:59,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:59,552:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:59,555:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:59,556:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:59,559:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:59,560:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:59,562:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:59,572:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:47:59,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:47:59,575:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:47:59,577:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:47:59,578:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:47:59,579:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:47:59,580:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:47:59,581:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:47:59,582:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:47:59,595:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:59,595:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:59,856:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:47:59,856:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:48:00,007:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:48:00,079:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:48:00,144:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:00,149:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:00,150:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:48:00,151:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:00,154:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:00,157:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:00,162:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:00,165:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:00,168:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:00,189:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:00,194:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:48:00,195:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:48:00,196:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:48:00,198:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:48:00,200:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:00,203:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:00,205:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:00,220:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:48:00,221:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:48:00,221:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:48:00,224:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:48:05,054:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:05,055:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:05,056:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:05,056:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:05,057:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:05,058:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:05,059:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:05,061:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:05,062:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:05,074:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:05,076:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:05,077:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:05,078:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:05,079:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:05,081:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:05,083:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:05,084:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:05,085:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:05,099:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:05,099:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:05,452:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:05,452:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:48:05,608:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:48:05,638:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:48:05,708:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:05,711:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:05,713:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:48:05,714:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:05,716:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:05,718:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:05,721:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:05,723:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:05,725:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:05,757:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:05,762:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:48:05,763:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:48:05,764:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:48:05,767:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:48:05,769:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:05,772:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:05,775:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:05,804:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:48:05,805:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:48:05,806:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:48:05,810:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:48:15,346:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:15,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:15,347:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:15,348:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:15,348:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:15,349:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:15,349:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:15,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:15,350:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:15,355:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:15,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:15,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:15,355:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:15,356:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:15,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:15,357:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:15,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:15,358:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:15,363:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:15,363:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:15,635:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:15,635:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:48:15,724:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:48:15,741:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:48:15,800:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:15,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:15,803:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:48:15,803:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:15,804:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:15,805:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:15,805:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:15,806:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:15,806:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:15,810:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:15,811:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:48:15,811:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:48:15,811:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:48:15,811:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:48:15,812:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:15,812:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:15,813:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:15,818:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:48:15,819:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:48:15,819:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:48:15,821:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:48:16,778:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:16,781:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:16,781:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:16,782:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:16,784:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:16,785:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:16,786:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:16,786:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:16,787:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:16,790:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:16,791:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:16,791:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:16,791:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:16,792:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:16,792:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:16,792:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:16,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:16,793:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:16,798:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:16,798:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:17,056:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:17,056:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:48:17,156:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:48:17,171:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:48:17,232:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:17,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:17,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:48:17,233:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:17,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:17,234:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:17,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:17,235:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:17,236:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:17,240:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:17,240:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:48:17,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:48:17,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:48:17,241:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:48:17,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:17,242:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:17,243:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:17,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:48:17,248:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:48:17,249:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:48:17,251:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:48:18,387:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:18,390:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:18,391:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:18,392:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:18,393:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:18,394:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:18,395:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:18,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:18,396:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:18,400:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:18,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:18,400:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:18,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:18,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:18,402:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:18,403:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:18,404:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:18,404:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:18,415:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:18,415:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:18,679:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:18,680:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:48:18,787:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:48:18,802:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:48:18,856:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:18,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:18,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:48:18,857:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:18,858:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:18,858:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:18,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:18,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:18,859:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:18,863:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:18,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:48:18,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:48:18,864:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:48:18,865:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:48:18,865:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:18,866:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:18,867:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:18,872:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:48:18,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:48:18,873:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:48:18,875:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

2025-01-23 15:48:20,011:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:20,012:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:20,013:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:20,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:20,014:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:20,015:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:20,016:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:20,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'CSU_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:20,017:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_csu_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:20,021:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:20,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:20,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:107: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.18

2025-01-23 15:48:20,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:20,022:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:20,023:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:20,023:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:20,024:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:113: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'STS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:20,024:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_sts_system_health.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:20,029:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:20,029:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:20,290:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesRegressor from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:20,291:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.1.1', 'setuptools': '56.0.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.2.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.58.1', 'requests': '2.32.3', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.1', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-23 15:48:20,379:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  abnormal['TRO_NEG_COUNT'] = 0

2025-01-23 15:48:20,401:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_tro_fault_detector.py:104: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['steep_label'] = self.data.apply(lambda x : DataUtility.classify_decline_steep_label(x['TRO_Ratio'],x['pred_Ratio']),axis=1)

2025-01-23 15:48:20,447:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\rate_change_manager.py:14: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['{}_Ratio'.format(column)] = differences

2025-01-23 15:48:20,448:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:108: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.dropna(inplace=True)

2025-01-23 15:48:20,449:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:109: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 0.22

2025-01-23 15:48:20,449:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data[f'{col}_Ratio'] = self.data[f'{col}_Ratio'].abs()

2025-01-23 15:48:20,450:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = (self.data[f'{col}_Ratio'] / self.data['THRESHOLD']).abs() * 10

2025-01-23 15:48:20,450:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:20,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:20,451:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data.rename(columns={'FTS_Ratio': 'DIFF'}, inplace=True)

2025-01-23 15:48:20,452:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fts_system_health.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:20,456:WARNING:C:\Users\pc021\dx_project\HealthPipeline\health_env\lib\site-packages\sklearn\base.py:318: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.1 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2025-01-23 15:48:20,456:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.normalize_series(self.data[[col]])

2025-01-23 15:48:20,457:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['THRESHOLD'] = 1.96

2025-01-23 15:48:20,457:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['STANDARDIZE_FMU'] = self.data['STANDARDIZE_FMU'].abs()

2025-01-23 15:48:20,457:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = abs( self.data['STANDARDIZE_FMU'] /  self.data['THRESHOLD']) * 30

2025-01-23 15:48:20,458:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['rolling_mean'] = data[col].rolling(window=window).mean()

2025-01-23 15:48:20,459:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_rate_change_manager.py:21: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data.dropna(inplace=True)

2025-01-23 15:48:20,459:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_fmu_system_health.py:78: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['HEALTH_RATIO'] = self.data['HEALTH_RATIO'].apply(lambda x: min(100, x))

2025-01-23 15:48:20,465:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['GENERALIZATION_EFFICIENCY'] = (100*self.data['TRO'])/((1.323*self.data['CURRENT']) / self.data['FMU']) * (1 + k * (1 - self.data['CSU'] / 50))

2025-01-23 15:48:20,465:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:44: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] =  - (100 - self.data['GENERALIZATION_EFFICIENCY'])

2025-01-23 15:48:20,466:WARNING:C:\Users\pc021\dx_project\CommonLibrary\src\base\base_current_system_health.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.data['ELECTRODE_EFFICIENCY'] = self.data['ELECTRODE_EFFICIENCY'].apply(lambda x: 0 if x >= 0 else x)

2025-01-23 15:48:20,468:WARNING:C:\Users\pc021\dx_project\HealthPipeline\src\stat_healthchecker\current_system_health.py:28: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  self.group = self.data.groupby(['SHIP_ID','OP_INDEX','SECTION']).mean()['ELECTRODE_EFFICIENCY'].to_frame().reset_index()

